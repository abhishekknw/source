# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.db.models.deletion
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountInfo',
            fields=[
                ('account_id', models.CharField(max_length=15, serialize=False, primary_key=True, db_column='ACCOUNT_ID')),
                ('name', models.CharField(max_length=50, db_column='NAME', blank=True)),
                ('phone', models.CharField(max_length=10, db_column='PHONE', blank=True)),
                ('email', models.CharField(max_length=50, db_column='EMAILID', blank=True)),
                ('address', models.CharField(max_length=100, db_column='ADDRESS', blank=True)),
                ('reference_name', models.CharField(max_length=50, db_column='REFERENCE_NAME', blank=True)),
                ('reference_phone', models.CharField(max_length=10, db_column='REFERENCE_PHONE', blank=True)),
                ('reference_email', models.CharField(max_length=50, db_column='REFERENCE_EMAIL', blank=True)),
                ('comments', models.TextField(max_length=100, db_column='COMMENTS', blank=True)),
            ],
            options={
                'db_table': 'ACCOUNT_INFO',
            },
        ),
        migrations.CreateModel(
            name='AdInventoryLocationMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=22, db_column='ADINVENTORY_ID')),
                ('adinventory_name', models.CharField(default='POSTER', max_length=10, db_column='ADINVENTORY_NAME', choices=[('POSTER', 'Poster'), ('STANDEE', 'Standee'), ('STALL', 'Stall'), ('CAR DISPLAY', 'Car Display'), ('FLIER', 'Flier'), ('BANNER', 'Banner')])),
            ],
            options={
                'db_table': 'ad_inventory_location_mapping',
            },
        ),
        migrations.CreateModel(
            name='AdInventoryType',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_name', models.CharField(default='POSTER', max_length=20, db_column='ADINVENTORY_NAME', choices=[('POSTER', 'Poster'), ('STANDEE', 'Standee'), ('STALL', 'Stall'), ('CAR DISPLAY', 'Car Display'), ('FLIER', 'Flier'), ('BANNER', 'Banner')])),
                ('adinventory_type', models.CharField(max_length=20, db_column='ADINVENTORY_TYPE')),
            ],
            options={
                'db_table': 'ad_inventory_type',
            },
        ),
        migrations.CreateModel(
            name='AssignedAudits',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('ad_inventory_id', models.CharField(max_length=50, db_column='AD_INVENTORY_ID', blank=True)),
                ('ad_inventory_type', models.CharField(max_length=50, null=True, db_column='AD_INVENTORY_TYPE', blank=True)),
                ('supplier_name', models.CharField(max_length=50, db_column='SUPPLIER_NAME', blank=True)),
                ('ad_location', models.CharField(max_length=50, db_column='AD_LOCATION', blank=True)),
                ('address', models.CharField(max_length=100, db_column='ADDRESS', blank=True)),
                ('date', models.DateField(null=True, db_column='DATE')),
                ('business_name', models.CharField(max_length=50, db_column='BUSINESS_NAME', blank=True)),
                ('audit_type', models.CharField(max_length=20, db_column='AUDIT_TYPE', blank=True)),
                ('image_url', models.CharField(max_length=100, null=True, db_column='IMAGE_URL')),
            ],
        ),
        migrations.CreateModel(
            name='AuditorSocietyMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('user_id', models.IntegerField(null=True, db_column='USER_ID')),
            ],
            options={
                'db_table': 'auditor_society_mapping',
            },
        ),
        migrations.CreateModel(
            name='Audits',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('latitude', models.FloatField(null=True, db_column='LATITUDE')),
                ('longitude', models.FloatField(null=True, db_column='LONGITUDE')),
                ('timestamp', models.DateTimeField(null=True, db_column='TIMESTAMP')),
                ('barcode', models.FloatField(null=True, db_column='BARCODE')),
                ('audited_by', models.IntegerField(null=True, db_column='USER_ID')),
                ('audit_type', models.CharField(max_length=20, db_column='AUDIT_TYPE', blank=True)),
                ('image_url', models.CharField(max_length=100, null=True, db_column='IMAGE_URL')),
            ],
            options={
                'db_table': 'audits',
            },
        ),
        migrations.CreateModel(
            name='BannerInventory',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=22, db_column='ADINVENTORY_ID', blank=True)),
                ('type', models.CharField(max_length=20, db_column='BANNER_TYPE', blank=True)),
                ('banner_location', models.CharField(max_length=50, db_column='BANNER_DISPLAY_LOCATION', blank=True)),
                ('banner_size', models.CharField(max_length=10, db_column='BANNER_SIZE', blank=True)),
                ('inventory_status', models.CharField(max_length=15, db_column='INVENTORY_STATUS', blank=True)),
                ('photograph_1', models.CharField(max_length=45, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, db_column='PHOTOGRAPH_2', blank=True)),
            ],
            options={
                'db_table': 'banner_inventory',
            },
        ),
        migrations.CreateModel(
            name='BusinessAccountContact',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('object_id', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50, db_column='NAME', blank=True)),
                ('designation', models.CharField(max_length=20, db_column='DESIGNATION', blank=True)),
                ('department', models.CharField(max_length=20, db_column='DEPARTMENT', blank=True)),
                ('phone', models.CharField(max_length=10, db_column='PHONE', blank=True)),
                ('email', models.CharField(max_length=50, db_column='EMAILID', blank=True)),
                ('spoc', models.BooleanField(default=False, db_column='SPOC')),
                ('comments', models.TextField(max_length=100, db_column='COMMENTS', blank=True)),
                ('content_type', models.ForeignKey(to='contenttypes.ContentType')),
            ],
            options={
                'db_table': 'BUSINESS_ACCOUNT_CONTACT',
            },
        ),
        migrations.CreateModel(
            name='BusinessInfo',
            fields=[
                ('business_id', models.CharField(max_length=15, serialize=False, primary_key=True, db_column='BUSINESS_ID')),
                ('name', models.CharField(max_length=50, db_column='NAME', blank=True)),
                ('phone', models.CharField(max_length=10, db_column='PHONE', blank=True)),
                ('email', models.CharField(max_length=50, db_column='EMAILID', blank=True)),
                ('address', models.CharField(max_length=100, db_column='ADDRESS', blank=True)),
                ('reference_name', models.CharField(max_length=50, db_column='REFERENCE_NAME', blank=True)),
                ('reference_phone', models.CharField(max_length=10, db_column='REFERENCE_PHONE', blank=True)),
                ('reference_email', models.CharField(max_length=50, db_column='REFERENCE_EMAIL', blank=True)),
                ('comments', models.TextField(max_length=100, db_column='COMMENTS', blank=True)),
            ],
            options={
                'db_table': 'BUSINESS_INFO',
            },
        ),
        migrations.CreateModel(
            name='BusinessSubTypes',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('business_sub_type', models.CharField(max_length=100, db_column='SUBTYPE', blank=True)),
                ('business_sub_type_code', models.CharField(max_length=3, null=True, db_column='SUBTYPE_CODE', blank=True)),
            ],
            options={
                'db_table': 'BUSINESS_SUBTYPES',
            },
        ),
        migrations.CreateModel(
            name='BusinessTypes',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('business_type', models.CharField(max_length=100, db_column='BUSINESS_TYPE', blank=True)),
                ('business_type_code', models.CharField(max_length=4, unique=True, null=True, db_column='TYPE_CODE', blank=True)),
            ],
            options={
                'db_table': 'BUSINESS_TYPES',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('start_date', models.DateTimeField(null=True, db_column='START_DATE')),
                ('end_date', models.DateTimeField(null=True, db_column='END_DATE')),
                ('tentative_cost', models.IntegerField(null=True, db_column='TENTATIVE_COST')),
                ('booking_status', models.CharField(max_length=20, db_column='BOOKING_STATUS', blank=True)),
                ('account', models.ForeignKey(related_name='campaigns', db_column='BUSINESS_ID', to='v0.AccountInfo', null=True)),
            ],
            options={
                'db_table': 'campaign',
            },
        ),
        migrations.CreateModel(
            name='CampaignBookingInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('booking_id', models.IntegerField(null=True, db_column='BOOKING_ID')),
                ('booking_amount', models.FloatField(null=True, db_column='BOOKING_AMOUNT')),
                ('payment_mode', models.CharField(max_length=20, db_column='PAYMENT_MODE', blank=True)),
                ('payment_no', models.CharField(max_length=20, db_column='PAYMENT_NO', blank=True)),
                ('date_received', models.DateField(null=True, db_column='DATE_RECEIVED')),
                ('campaign', models.ForeignKey(related_name='bookings', db_column='CAMPAIGN_ID', to='v0.Campaign', null=True)),
            ],
            options={
                'db_table': 'campaign_booking_info',
            },
        ),
        migrations.CreateModel(
            name='CampaignInventoryPrice',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('master_factor', models.IntegerField(null=True, db_column='MASTER_FACTOR')),
                ('business_price', models.IntegerField(null=True, db_column='BUSINESS_PRICE')),
                ('campaign', models.ForeignKey(related_name='campaign', db_column='CAMPAIGN_ID', to='v0.Campaign', null=True)),
            ],
            options={
                'db_table': 'campaign_inventory_price',
            },
        ),
        migrations.CreateModel(
            name='CampaignOtherCost',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('content_dev_cost', models.IntegerField(null=True, db_column='CONTENT_DEV_COST')),
                ('pm_cost', models.IntegerField(null=True, db_column='PROJECT_MGMT_COST')),
                ('data_analytics', models.IntegerField(null=True, db_column='DATA_ANALYTICS')),
                ('printing_cost', models.IntegerField(null=True, db_column='PRINTING_COST')),
                ('digital_camp_cost', models.IntegerField(null=True, db_column='DIGITAL_CAMP_COST')),
                ('campaign', models.ForeignKey(related_name='campaign_cost', db_column='CAMPAIGN_ID', to='v0.Campaign', null=True)),
            ],
            options={
                'db_table': 'campaign_other_cost',
            },
        ),
        migrations.CreateModel(
            name='CampaignSocietyMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('booking_status', models.CharField(max_length=20, db_column='BOOKING_STATUS', blank=True)),
                ('adjusted_price', models.IntegerField(null=True, db_column='ADJUSTED_PRICE')),
                ('comments', models.TextField(max_length=100, db_column='COMMENTS', blank=True)),
                ('campaign', models.ForeignKey(related_name='societies', db_column='CAMPAIGN_ID', to='v0.Campaign', null=True)),
            ],
            options={
                'db_table': 'campaign_society_mapping',
            },
        ),
        migrations.CreateModel(
            name='CampaignSupplierTypes',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('supplier_type', models.CharField(max_length=20, db_column='SUPPLIER_TYPE', blank=True)),
                ('count', models.IntegerField(null=True, db_column='COUNT')),
                ('campaign', models.ForeignKey(related_name='supplier_types', db_column='CAMPAIGN_ID', to='v0.Campaign', null=True)),
            ],
            options={
                'db_table': 'campaign_supplier_types',
            },
        ),
        migrations.CreateModel(
            name='CampaignTypeMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('type', models.CharField(max_length=20, db_column='TYPE', blank=True)),
                ('sub_type', models.CharField(max_length=20, db_column='SUB_TYPE', blank=True)),
                ('campaign', models.ForeignKey(related_name='types', db_column='CAMPAIGN_ID', to='v0.Campaign', null=True)),
            ],
            options={
                'db_table': 'campaign_type_mapping',
            },
        ),
        migrations.CreateModel(
            name='CampaignTypes',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('type_name', models.CharField(max_length=20, db_column='TYPE_NAME', blank=True)),
            ],
            options={
                'db_table': 'campaign_types',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('city_name', models.CharField(max_length=100, null=True, db_column='CITY_NAME')),
                ('city_code', models.CharField(max_length=5, null=True, db_column='CITY_CODE')),
            ],
            options={
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='CityArea',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('label', models.CharField(max_length=100, null=True, db_column='AREA_NAME')),
                ('area_code', models.CharField(max_length=5, null=True, db_column='AREA_CODE')),
                ('city_code', models.ForeignKey(related_name='citycode', db_column='CITY_CODE', to='v0.City', null=True)),
            ],
            options={
                'db_table': 'city_area',
            },
        ),
        migrations.CreateModel(
            name='CitySubArea',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('subarea_name', models.CharField(max_length=100, null=True, db_column='SUBAREA_NAME')),
                ('subarea_code', models.CharField(max_length=5, null=True, db_column='SUBAREA_CODE')),
                ('locality_rating', models.CharField(max_length=100, null=True, db_column='LOCALITY_RATING')),
                ('area_code', models.ForeignKey(related_name='areacode', db_column='AREA_CODE', to='v0.CityArea', null=True)),
            ],
            options={
                'db_table': 'city_area_subarea',
            },
        ),
        migrations.CreateModel(
            name='CommonAreaDetails',
            fields=[
                ('common_area_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='COMMON_AREA_ID')),
                ('pole_count', models.IntegerField(null=True, db_column='POLE_COUNT', blank=True)),
                ('street_furniture_count', models.IntegerField(null=True, db_column='STREET_FURNITURE_COUNT', blank=True)),
                ('banner_count', models.IntegerField(null=True, db_column='BANNER_COUNT', blank=True)),
                ('common_area_stalls_count', models.IntegerField(null=True, db_column='COMMON_AREA_STALLS_COUNT', blank=True)),
                ('car_display', models.IntegerField(null=True, db_column='CAR_DISPLAY', blank=True)),
                ('wall_count', models.IntegerField(null=True, db_column='WALL_COUNT', blank=True)),
                ('major_event_count', models.IntegerField(null=True, db_column='MAJOR_EVENT_COUNT', blank=True)),
            ],
            options={
                'db_table': 'common_area_details',
            },
        ),
        migrations.CreateModel(
            name='CommunityHallInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('size_length', models.FloatField(default=0.0, null=True, db_column='SIZE_LENGTH', blank=True)),
                ('size_breadth', models.FloatField(default=0.0, null=True, db_column='SIZE_BREADTH', blank=True)),
                ('ceiling_height', models.FloatField(default=0.0, null=True, db_column='CEILING_HEIGHT', blank=True)),
                ('timings_open', models.TimeField(null=True, db_column='TIMINGS_OPEN', blank=True)),
                ('timings_close', models.TimeField(null=True, db_column='TIMINGS_CLOSE', blank=True)),
                ('rentals_current', models.FloatField(default=0.0, null=True, db_column='RENTALS_CURRENT', blank=True)),
                ('daily_price_society', models.FloatField(default=0.0, null=True, db_column='DAILY_PRICE_SOCIETY', blank=True)),
                ('daily_price_business', models.FloatField(default=0.0, null=True, db_column='DAILY_PRICE_BUSINESS', blank=True)),
                ('location', models.CharField(max_length=50, null=True, db_column='LOCATION', blank=True)),
                ('furniture_available', models.CharField(max_length=5, null=True, db_column='FURNITURE_AVAILABLE', blank=True)),
                ('chair_count', models.IntegerField(null=True, db_column='CHAIR_COUNT', blank=True)),
                ('tables_count', models.IntegerField(null=True, db_column='TABLES_COUNT', blank=True)),
                ('air_conditioned', models.CharField(max_length=5, null=True, db_column='AIR_CONDITIONED', blank=True)),
                ('projector_available', models.CharField(max_length=15, null=True, db_column='PROJECTOR_AVAILABLE', blank=True)),
                ('inventory_status', models.CharField(max_length=15, null=True, db_column='INVENTORY_STATUS', blank=True)),
                ('sitting', models.IntegerField(null=True, db_column='SITTING', blank=True)),
                ('audio_video_display_available', models.CharField(max_length=5, null=True, db_column='AUDIO_VIDEO_DISPLAY_AVAILABLE', blank=True)),
                ('electricity_charges_perhour', models.FloatField(default=0.0, null=True, db_column='ELECTRICITY_CHARGES_PERHOUR', blank=True)),
                ('notice_board_count_per_community_hall', models.IntegerField(null=True, db_column='NOTICE_BOARD_COUNT_PER_COMMUNITY_HALL', blank=True)),
                ('standee_location_count_per_community_hall', models.IntegerField(null=True, db_column='STANDEE_LOCATION_COUNT_PER_COMMUNITY_HALL', blank=True)),
                ('stall_count_per_community_hall', models.IntegerField(null=True, db_column='STALL_COUNT_PER_COMMUNITY_HALL', blank=True)),
                ('banner_count_per_community_hall', models.IntegerField(null=True, db_column='BANNER_COUNT_PER_COMMUNITY_HALL', blank=True)),
            ],
            options={
                'db_table': 'community_hall_info',
            },
        ),
        migrations.CreateModel(
            name='CompanyFloor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('floor_number', models.IntegerField(null=True, db_column='FLOOR_NUMBER', blank=True)),
            ],
            options={
                'db_table': 'corporate_building_floors',
            },
        ),
        migrations.CreateModel(
            name='ContactDetails',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='CONTACT_ID')),
                ('contact_type', models.CharField(max_length=30, null=True, db_column='CONTACT_TYPE', blank=True)),
                ('specify_others', models.CharField(max_length=50, null=True, db_column='SPECIFY_OTHERS', blank=True)),
                ('name', models.CharField(max_length=50, null=True, db_column='CONTACT_NAME', blank=True)),
                ('salutation', models.CharField(max_length=50, null=True, db_column='SALUTATION', blank=True)),
                ('landline', models.BigIntegerField(null=True, db_column='CONTACT_LANDLINE', blank=True)),
                ('std_code', models.CharField(max_length=6, null=True, db_column='STD_CODE', blank=True)),
                ('mobile', models.BigIntegerField(null=True, db_column='CONTACT_MOBILE', blank=True)),
                ('country_code', models.CharField(max_length=10, null=True, db_column='COUNTRY_CODE', blank=True)),
                ('email', models.CharField(max_length=50, null=True, db_column='CONTACT_EMAILID', blank=True)),
                ('spoc', models.CharField(max_length=5, null=True, db_column='SPOC', blank=True)),
                ('contact_authority', models.CharField(max_length=5, null=True, db_column='CONTACT_AUTHORITY', blank=True)),
            ],
            options={
                'db_table': 'contact_details',
            },
        ),
        migrations.CreateModel(
            name='ContactDetailsGeneric',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='CONTACT_ID')),
                ('object_id', models.CharField(max_length=12)),
                ('contact_type', models.CharField(max_length=30, null=True, db_column='CONTACT_TYPE', blank=True)),
                ('name', models.CharField(max_length=50, null=True, db_column='CONTACT_NAME', blank=True)),
                ('salutation', models.CharField(max_length=50, null=True, db_column='SALUTATION', blank=True)),
                ('landline', models.BigIntegerField(null=True, db_column='CONTACT_LANDLINE', blank=True)),
                ('stdcode', models.CharField(max_length=6, null=True, db_column='STD_CODE', blank=True)),
                ('mobile', models.BigIntegerField(null=True, db_column='CONTACT_MOBILE', blank=True)),
                ('countrycode', models.CharField(max_length=10, null=True, db_column='COUNTRY_CODE', blank=True)),
                ('email', models.CharField(max_length=50, null=True, db_column='CONTACT_EMAILID', blank=True)),
                ('content_type', models.ForeignKey(related_name='contacts', to='contenttypes.ContentType')),
            ],
            options={
                'db_table': 'contact_details_generic',
            },
        ),
        migrations.CreateModel(
            name='CorporateBuilding',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('building_name', models.CharField(max_length=50, null=True, db_column='BUILDING_NAME', blank=True)),
                ('number_of_wings', models.IntegerField(null=True, db_column='NUMBER_OF_WINGS', blank=True)),
            ],
            options={
                'db_table': 'corporate_building',
            },
        ),
        migrations.CreateModel(
            name='CorporateBuildingWing',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('wing_name', models.CharField(max_length=50, null=True, db_column='WING_NAME', blank=True)),
                ('number_of_floors', models.IntegerField(null=True, db_column='NUMBER_OF_FLOORS', blank=True)),
                ('building_id', models.ForeignKey(related_name='buildingwing', db_column='BUILDING_ID', blank=True, to='v0.CorporateBuilding', null=True)),
            ],
            options={
                'db_table': 'corporate_building_wing',
            },
        ),
        migrations.CreateModel(
            name='CorporateCompanyDetails',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('building_name', models.CharField(max_length=20, null=True, db_column='BUILDING_NAME', blank=True)),
                ('wing_name', models.CharField(max_length=20, null=True, db_column='WING_NAME', blank=True)),
            ],
            options={
                'db_table': 'corporate_company_details',
            },
        ),
        migrations.CreateModel(
            name='CorporateParkCompanyList',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('name', models.CharField(max_length='50', null=True, db_column='COMPANY_NAME', blank=True)),
            ],
            options={
                'db_table': 'corporateparkcompanylist',
            },
        ),
        migrations.CreateModel(
            name='DoorToDoorInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=22, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('flier_distribution_frequency_door', models.CharField(max_length=20, null=True, db_column='FLIER_DISTRIBUTION_FREQUENCY_DOOR', blank=True)),
                ('door_to_door_inventory_status', models.CharField(max_length=15, null=True, db_column='DOOR_TO_DOOR_INVENTORY_STATUS', blank=True)),
                ('door_to_door_price_society', models.FloatField(default=0.0, null=True, db_column='DOOR_TO_DOOR_PRICE_SOCIETY', blank=True)),
                ('door_to_door_price_business', models.FloatField(default=0.0, null=True, db_column='DOOR_TO_DOOR_PRICE_BUSINESS', blank=True)),
                ('master_door_to_door_flyer_price_society', models.FloatField(default=0.0, null=True, db_column='MASTER_DOOR_TO_DOOR_FLYER_PRICE_SOCIETY', blank=True)),
                ('master_door_to_door_flyer_price_business', models.FloatField(default=0.0, null=True, db_column='MASTER_DOOR_TO_DOOR_FLYER_PRICE_BUSINESS', blank=True)),
                ('leaflet_handover', models.CharField(max_length=50, null=True, db_column='LEAFLET_HANDOVER', blank=True)),
                ('activities', models.CharField(max_length=255, null=True, db_column='ACTIVITIES', blank=True)),
                ('banner_spaces_count', models.IntegerField(null=True, db_column='BANNER_SPACES_COUNT', blank=True)),
            ],
            options={
                'db_table': 'door_to_door_info',
            },
        ),
        migrations.CreateModel(
            name='DurationType',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('duration_name', models.CharField(max_length=20, db_column='DURATION_NAME')),
                ('days_count', models.CharField(max_length=10, db_column='DAYS_COUNT')),
            ],
            options={
                'db_table': 'duration_type',
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('event_id', models.AutoField(serialize=False, primary_key=True, db_column='EVENT_ID')),
                ('event_name', models.CharField(max_length=20, null=True, db_column='EVENT_NAME', blank=True)),
                ('event_location', models.CharField(max_length=50, null=True, db_column='EVENT_LOCATION', blank=True)),
                ('past_gathering_per_event', models.IntegerField(null=True, db_column='PAST_GATHERING_PER_EVENT', blank=True)),
                ('start_day', models.CharField(max_length=30, null=True, db_column='START_DAY', blank=True)),
                ('end_day', models.CharField(max_length=30, null=True, db_column='END_DAY', blank=True)),
                ('important_day', models.CharField(max_length=30, null=True, db_column='IMPORTANT_DAY', blank=True)),
                ('activities', models.CharField(max_length=50, null=True, db_column='ACTIVITIES', blank=True)),
                ('stall_spaces_count', models.IntegerField(null=True, db_column='STALL_SPACES_COUNT', blank=True)),
                ('banner_spaces_count', models.IntegerField(null=True, db_column='BANNER_SPACES_COUNT', blank=True)),
                ('poster_spaces_count', models.IntegerField(null=True, db_column='POSTER_SPACES_COUNT', blank=True)),
                ('standee_spaces_count', models.IntegerField(null=True, db_column='STANDEE_SPACES_COUNT', blank=True)),
                ('event_status', models.CharField(max_length=10, null=True, db_column='EVENT_STATUS', blank=True)),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='FlatType',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('flat_type', models.CharField(max_length=20, db_column='FLAT_TYPE')),
                ('flat_count', models.IntegerField(null=True, db_column='FLAT_COUNT', blank=True)),
                ('flat_type_count', models.IntegerField(null=True, db_column='FLAT_TYPE_COUNT', blank=True)),
                ('size_carpet_area', models.FloatField(null=True, db_column='SIZE_CARPET_AREA', blank=True)),
                ('size_builtup_area', models.FloatField(null=True, db_column='SIZE_BUILTUP_AREA', blank=True)),
                ('flat_rent', models.IntegerField(null=True, db_column='FLAT_RENT', blank=True)),
                ('average_rent_per_sqft', models.FloatField(null=True, db_column='AVERAGE_RENT_PER_SQFT', blank=True)),
            ],
            options={
                'db_table': 'flat_type',
            },
        ),
        migrations.CreateModel(
            name='FlatTypeCode',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('flat_type_name', models.CharField(max_length=20, null=True, db_column='FLAT_TYPE_NAME')),
                ('flat_type_code', models.CharField(max_length=5, null=True, db_column='FLAT_TYPE_CODE')),
            ],
            options={
                'db_table': 'flat_type_code',
            },
        ),
        migrations.CreateModel(
            name='FlierThroughLobbyInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=22, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('flier_distribution_frequency_lobby', models.CharField(max_length=20, null=True, db_column='FLIER_DISTRIBUTION_FREQUENCY_LOBBY', blank=True)),
                ('flier_lobby_inventory_status', models.CharField(max_length=15, null=True, db_column='FLIER_LOBBY_INVENTORY_STATUS', blank=True)),
                ('flier_lobby_price_society', models.FloatField(default=0.0, null=True, db_column='FLIER_LOBBY_PRICE_SOCIETY', blank=True)),
                ('flier_lobby_price_business', models.FloatField(default=0.0, null=True, db_column='FLIER_LOBBY_PRICE_BUSINESS', blank=True)),
                ('master_flier_lobby_price_society', models.FloatField(default=0.0, null=True, db_column='MASTER_FLIER_LOBBY_PRICE_SOCIETY', blank=True)),
                ('master_flier_lobby_price_business', models.FloatField(default=0.0, null=True, db_column='MASTER_FLIER_LOBBY_PRICE_BUSINESS', blank=True)),
            ],
            options={
                'db_table': 'flier_through_lobby_info',
            },
        ),
        migrations.CreateModel(
            name='ImageMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('location_id', models.CharField(max_length=20, null=True, db_column='LOCATION_ID', blank=True)),
                ('location_type', models.CharField(max_length=20, null=True, db_column='LOCATION_TYPE', blank=True)),
                ('image_url', models.CharField(max_length=100, db_column='IMAGE_URL')),
                ('comments', models.CharField(max_length=100, null=True, db_column='COMMENTS', blank=True)),
                ('name', models.CharField(max_length=50, null=True, db_column='NAME', blank=True)),
            ],
            options={
                'db_table': 'image_mapping',
            },
        ),
        migrations.CreateModel(
            name='InventoryInfo',
            fields=[
                ('inventory_type_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='INVENTORY_TYPE_ID')),
                ('inventory_length', models.CharField(max_length=10, null=True, db_column='INVENTORY_LENGTH', blank=True)),
                ('inventory_breadth', models.CharField(max_length=10, null=True, db_column='INVENTORY_BREADTH', blank=True)),
                ('inventory_height', models.CharField(max_length=10, null=True, db_column='INVENTORY_HEIGHT', blank=True)),
                ('inventory_area', models.CharField(max_length=10, null=True, db_column='INVENTORY_AREA', blank=True)),
                ('inventory_size', models.CharField(max_length=10, null=True, db_column='INVENTORY_SIZE', blank=True)),
                ('inventory_name', models.CharField(max_length=70, null=True, db_column='INVENTORY_NAME', blank=True)),
                ('comments1', models.CharField(max_length=500, null=True, db_column='COMMENTS1', blank=True)),
                ('comments2', models.CharField(max_length=500, null=True, db_column='COMMENTS2', blank=True)),
                ('material_type', models.CharField(max_length=70, null=True, db_column='MATERIAL_TYPE', blank=True)),
            ],
            options={
                'db_table': 'inventory_info',
            },
        ),
        migrations.CreateModel(
            name='InventoryLocation',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('location_id', models.CharField(max_length=20, db_column='LOCATION_ID')),
                ('location_type', models.CharField(max_length=20, null=True, db_column='LOCATION_TYPE', blank=True)),
            ],
            options={
                'db_table': 'inventory_location',
            },
        ),
        migrations.CreateModel(
            name='InventorySummary',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('poster_allowed_nb', models.BooleanField(default=False, db_column='POSTER_ALLOWED_NB')),
                ('poster_allowed_lift', models.BooleanField(default=False, db_column='POSTER_ALLOWED_LIFT')),
                ('standee_allowed', models.BooleanField(default=False, db_column='STANDEE_ALLOWED')),
                ('stall_allowed', models.BooleanField(default=False, db_column='STALL_ALLOWED')),
                ('car_display_allowed', models.BooleanField(default=False, db_column='CAR_DISPLAY_ALLOWED')),
                ('flier_allowed', models.BooleanField(default=False, db_column='FLIER_ALLOWED')),
                ('nb_A4_allowed', models.BooleanField(default=False, db_column='NB_A4_ALLOWED')),
                ('nb_A3_allowed', models.BooleanField(default=False, db_column='NB_A3_ALLOWED')),
                ('poster_price_week_lift', models.IntegerField(null=True, db_column='POSTER_PRICE_WEEK_LIFT')),
                ('poster_price_week_nb', models.IntegerField(null=True, db_column='POSTER_PRICE_WEEK_NB')),
                ('standee_price_week', models.IntegerField(null=True, db_column='STANDEE_PRICE_WEEK')),
                ('stall_price_day_small', models.IntegerField(null=True, db_column='STALL_PRICE_DAY_SMALL')),
                ('stall_price_day_large', models.IntegerField(null=True, db_column='STALL_PRICE_DAY_LARGE')),
                ('cd_price_day_standard', models.IntegerField(null=True, db_column='CD_PRICE_DAY_STANDARD')),
                ('cd_price_day_premium', models.IntegerField(null=True, db_column='CD_PRICE_DAY_PREMIUM')),
                ('flier_price_day', models.IntegerField(null=True, db_column='FLIER_PRICE_DAY')),
                ('nb_count', models.IntegerField(null=True, db_column='NB_COUNT')),
                ('total_poster_nb', models.IntegerField(null=True, db_column='TOTAL_POSTERS_NB')),
                ('lift_count', models.IntegerField(null=True, db_column='LIFT_COUNT')),
                ('total_poster_count', models.IntegerField(null=True, db_column='TOTAL_POSTER_COUNT')),
                ('total_poster_campaigns', models.IntegerField(null=True, db_column='TOTAL_POSTER_CAMPAIGNS')),
                ('standee_small', models.BooleanField(default=False, db_column='STANDEE_SMALL')),
                ('standee_medium', models.BooleanField(default=False, db_column='STANDEE_MEDIUM')),
                ('total_standee_count', models.IntegerField(null=True, db_column='TOTAL_STANDEE_COUNT')),
                ('total_standee_campaigns', models.IntegerField(null=True, db_column='TOTAL_STANDEE_CAMPAIGNS')),
                ('stall_canopy', models.BooleanField(default=False, db_column='STALL_CANOPY')),
                ('stall_small', models.BooleanField(default=False, db_column='STALL_SMALL')),
                ('stall_large', models.BooleanField(default=False, db_column='STALL_LARGE')),
                ('cd_standard', models.BooleanField(default=False, db_column='CD_STANDARD')),
                ('cd_premium', models.BooleanField(default=False, db_column='CD_PREMIUM')),
                ('total_stall_count', models.IntegerField(null=True, db_column='TOTAL_STALL_COUNT')),
                ('timing', models.CharField(max_length=20, null=True, db_column='STALL_TIMING', blank=True)),
                ('furniture_available', models.BooleanField(default=False, db_column='FURNITURE_AVAILABLE')),
                ('electricity_available', models.BooleanField(default=False, db_column='ELECTRICITY_SEPARATE')),
                ('mailbox_allowed', models.BooleanField(default=False, db_column='MAILBOX_ALLOWED')),
                ('d2d_allowed', models.BooleanField(default=False, db_column='D2D_ALLOWED')),
                ('flier_frequency', models.IntegerField(null=True, db_column='FLIER_FREQUENCY')),
                ('flier_lobby_allowed', models.BooleanField(default=False, db_column='FLIER_LOBBY_ALLOWED')),
                ('poster_campaign', models.IntegerField(null=True, db_column='POSTER_CAMPAIGN', blank=True)),
                ('standee_campaign', models.IntegerField(null=True, db_column='STANDEE_CAMPAIGN', blank=True)),
                ('stall_or_cd_campaign', models.IntegerField(null=True, db_column='STALL_OR_CD_CAMPAIGN', blank=True)),
                ('flier_campaign', models.IntegerField(null=True, db_column='FLIER_CAMPAIGN', blank=True)),
                ('standee_per_campaign', models.IntegerField(null=True, db_column='STANDEE_PER_CAMPAIGN')),
                ('poster_per_campaign', models.IntegerField(null=True, db_column='POSTER_PER_CAMPAIGN')),
                ('campaign_count', models.IntegerField(null=True, db_column='CAMPAIGN_COUNT')),
                ('nb_price_confidence', models.CharField(max_length=20, null=True, db_column='NB_PRICE_CONFIDENCE', blank=True)),
                ('lift_price_confidence', models.CharField(max_length=20, null=True, db_column='LIFT_PRICE_CONFIDENCE', blank=True)),
                ('standee_price_confidence', models.CharField(max_length=20, null=True, db_column='STANDEE_PRICE_CONFIDENCE', blank=True)),
                ('smallStall_price_confidence', models.CharField(max_length=20, null=True, db_column='SMALLSTALL_PRICE_CONFIDENCE', blank=True)),
                ('largeStall_price_confidence', models.CharField(max_length=20, null=True, db_column='LARGESTALL_PRICE_CONFIDENCE', blank=True)),
                ('standard_price_confidence', models.CharField(max_length=20, null=True, db_column='STANDARD_PRICE_CONFIDENCE', blank=True)),
                ('premium_price_confidence', models.CharField(max_length=20, null=True, db_column='PREMIUM_PRICE_CONFIDENCE', blank=True)),
                ('flier_price_confidence', models.CharField(max_length=20, null=True, db_column='FLIER_PRICE_CONFIDENCE', blank=True)),
                ('poster_count_per_tower', models.IntegerField(null=True, db_column='POSTER_COUNT_PER_TOWER')),
                ('poster_count_per_nb', models.IntegerField(null=True, db_column='POSTER_COUNT_PER_NB')),
                ('standee_count_per_tower', models.IntegerField(null=True, db_column='STANDEE_COUNT_PER_TOWER')),
            ],
            options={
                'db_table': 'inventory_summary',
            },
        ),
        migrations.CreateModel(
            name='InventoryType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('supplier_code', models.CharField(max_length=4, db_index=True)),
                ('poster_allowed', models.BooleanField(default=False)),
                ('poster_type', models.CharField(max_length=10, null=True, blank=True)),
                ('standee_allowed', models.BooleanField(default=False)),
                ('standee_type', models.CharField(max_length=10, null=True, blank=True)),
                ('flier_allowed', models.BooleanField(default=False)),
                ('flier_type', models.CharField(max_length=20, null=True, blank=True)),
                ('stall_allowed', models.BooleanField(default=False)),
                ('stall_type', models.CharField(max_length=10, null=True, blank=True)),
                ('banner_allowed', models.BooleanField(default=False)),
                ('banner_type', models.CharField(max_length=10, null=True, blank=True)),
            ],
            options={
                'db_table': 'INVENTORY_TYPE',
            },
        ),
        migrations.CreateModel(
            name='InventoryTypeVersion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('supplier_code', models.CharField(max_length=4, db_index=True)),
                ('poster_allowed', models.BooleanField(default=False)),
                ('poster_type', models.CharField(max_length=10, null=True, blank=True)),
                ('standee_allowed', models.BooleanField(default=False)),
                ('standee_type', models.CharField(max_length=10, null=True, blank=True)),
                ('flier_allowed', models.BooleanField(default=False)),
                ('flier_type', models.CharField(max_length=20, null=True, blank=True)),
                ('stall_allowed', models.BooleanField(default=False)),
                ('stall_type', models.CharField(max_length=10, null=True, blank=True)),
                ('banner_allowed', models.BooleanField(default=False)),
                ('banner_type', models.CharField(max_length=10, null=True, blank=True)),
            ],
            options={
                'db_table': 'INVENTORY_TYPE_VERSION',
            },
        ),
        migrations.CreateModel(
            name='JMN_society',
            fields=[
                ('soc_id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('name', models.CharField(max_length=100, null=True, db_column='society_name', blank=True)),
                ('flats', models.CharField(max_length=15, null=True, db_column='flats', blank=True)),
                ('population', models.CharField(max_length=10, null=True, db_column='population', blank=True)),
                ('type', models.CharField(max_length=20, null=True, db_column='type', blank=True)),
                ('incomeGroup', models.CharField(max_length=15, null=True, db_column='incomeGroup', blank=True)),
                ('address', models.CharField(max_length=200, null=True, db_column='address', blank=True)),
                ('city', models.CharField(max_length=20, null=True, db_column='city', blank=True)),
                ('noticeBoard1', models.CharField(max_length=10, null=True, db_column='noticeBoard1', blank=True)),
                ('noticeBoard1LastDt', models.CharField(max_length=25, null=True, db_column='noticeBoard1LastDt', blank=True)),
                ('noticeBoard1Count', models.CharField(max_length=10, null=True, db_column='noticeBoard1Count', blank=True)),
                ('noticeBoard1Duration', models.CharField(max_length=10, null=True, db_column='noticeBoard1Duration', blank=True)),
                ('kiosk', models.CharField(max_length=10, null=True, db_column='kiosk', blank=True)),
                ('kioskLastDt', models.CharField(max_length=25, null=True, db_column='kioskLastDt', blank=True)),
                ('carDisplay', models.CharField(max_length=10, null=True, db_column='carDisplay', blank=True)),
                ('carDisplayLastDt', models.CharField(max_length=25, null=True, db_column='carDisplayLastDt', blank=True)),
                ('festivalStall', models.CharField(max_length=10, null=True, db_column='festivalStall', blank=True)),
                ('festivalStallLastDt', models.CharField(max_length=25, null=True, db_column='festivalStallLastDt', blank=True)),
                ('flyer', models.CharField(max_length=10, null=True, db_column='flyer', blank=True)),
                ('flyerDistributionMode', models.CharField(max_length=20, null=True, db_column='flyerDistributionMode', blank=True)),
                ('flyerLastDt', models.CharField(max_length=25, null=True, db_column='flyerLastDt', blank=True)),
                ('billJacketLastDt', models.CharField(max_length=25, null=True, db_column='billJacketLastDt', blank=True)),
                ('mainGate', models.CharField(max_length=10, null=True, db_column='mainGate', blank=True)),
                ('mainGateLastDt', models.CharField(max_length=20, null=True, db_column='mainGateLastDt', blank=True)),
                ('guardCharge', models.CharField(max_length=10, null=True, db_column='guardCharge', blank=True)),
                ('lat', models.CharField(max_length=15, null=True, db_column='latitude', blank=True)),
                ('lon', models.CharField(max_length=15, null=True, db_column='longitude', blank=True)),
                ('region', models.CharField(max_length=70, null=True, db_column='region', blank=True)),
                ('active', models.CharField(max_length=5, null=True, db_column='active', blank=True)),
                ('lastDt', models.CharField(max_length=25, null=True, db_column='lastDt', blank=True)),
                ('photo', models.CharField(max_length=100, null=True, db_column='photo', blank=True)),
                ('contact1Name', models.CharField(max_length=30, null=True, db_column='contact1Name', blank=True)),
                ('contact1Designation', models.CharField(max_length=15, null=True, db_column='contact1Designation', blank=True)),
                ('contact1Email', models.CharField(max_length=50, null=True, db_column='contact1Email', blank=True)),
                ('contact1Mobile', models.CharField(max_length=15, null=True, db_column='contact1Mobile', blank=True)),
                ('contact2Name', models.CharField(max_length=30, null=True, db_column='contact2Name', blank=True)),
                ('contact2Designation', models.CharField(max_length=15, null=True, db_column='contact2Designation', blank=True)),
                ('contact2Email', models.CharField(max_length=50, null=True, db_column='contact2Email', blank=True)),
                ('contact2Mobile', models.CharField(max_length=15, null=True, db_column='contact2Mobile', blank=True)),
                ('referredBy', models.CharField(max_length=20, null=True, db_column='referredBy', blank=True)),
                ('referredByEmail', models.CharField(max_length=40, null=True, db_column='referredByEmail', blank=True)),
                ('notPermitted', models.CharField(max_length=30, null=True, db_column='notPermitted', blank=True)),
                ('paymentMode', models.CharField(max_length=20, null=True, db_column='paymentMode', blank=True)),
                ('paymentDetail', models.CharField(max_length=20, null=True, db_column='paymentDetail', blank=True)),
            ],
            options={
                'db_table': 'jmn_society',
            },
        ),
        migrations.CreateModel(
            name='LiftDetails',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('lift_tag', models.CharField(max_length=20, null=True, db_column='LIFT_TAG', blank=True)),
                ('adinventory_id', models.CharField(max_length=22, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('acrylic_board_available', models.CharField(max_length=5, null=True, db_column='ACRYLIC_BOARD_AVAILABLE', blank=True)),
                ('lift_location', models.CharField(max_length=100, null=True, db_column='LIFT_LOCATION', blank=True)),
                ('total_poster_per_lift', models.IntegerField(null=True, db_column='TOTAL_POSTER_PER_LIFT', blank=True)),
                ('lift_lit', models.CharField(max_length=5, null=True, db_column='LIFT_LIT', blank=True)),
                ('lift_bubble_wrapping_allowed', models.CharField(max_length=5, null=True, db_column='LIFT_BUBBLE_WRAPPING_ALLOWED', blank=True)),
                ('lift_advt_walls_count', models.IntegerField(null=True, db_column='LIFT_ADVT_WALLS_COUNT', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
                ('inventory_status_lift', models.CharField(max_length=20, null=True, db_column='INVENTORY_STATUS_LIFT', blank=True)),
                ('inventory_size', models.CharField(max_length=30, null=True, db_column='INVENTORY_SIZE', blank=True)),
            ],
            options={
                'db_table': 'lift_details',
            },
        ),
        migrations.CreateModel(
            name='MailboxInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('tower_id', models.CharField(max_length=20, null=True, db_column='TOWER_ID', blank=True)),
                ('adinventory_id', models.CharField(max_length=22, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('flier_distribution_frequency', models.CharField(max_length=20, null=True, db_column='FLIER_DISTRIBUTION_FREQUENCY', blank=True)),
                ('mail_box_inventory_status', models.CharField(max_length=20, null=True, db_column='MAIL_BOX_INVENTORY_STATUS', blank=True)),
                ('mailbox_count_per_tower', models.IntegerField(null=True, db_column='MAILBOX_COUNT_PER_TOWER', blank=True)),
                ('mailbox_flyer_price_society', models.FloatField(default=0.0, null=True, db_column='MAILBOX_FLYER_PRICE_SOCIETY', blank=True)),
                ('mailbox_flyer_price_business', models.FloatField(default=0.0, null=True, db_column='MAILBOX_FLYER_PRICE_BUSINESS', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
            ],
            options={
                'db_table': 'mailbox_info',
            },
        ),
        migrations.CreateModel(
            name='NoticeBoardDetails',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('notice_board_tag', models.CharField(max_length=20, null=True, db_column='NOTICE_BOARD_TAG', blank=True)),
                ('notice_board_type', models.CharField(max_length=50, null=True, db_column='NOTICE_BOARD_TYPE', blank=True)),
                ('notice_board_type_other', models.CharField(max_length=30, null=True, db_column='NOTICE_BOARD_TYPE_OTHER', blank=True)),
                ('notice_board_location', models.CharField(max_length=100, null=True, db_column='NOTICE_BOARD_LOCATION', blank=True)),
                ('total_poster_per_notice_board', models.IntegerField(null=True, db_column='TOTAL_POSTER_PER_NOTICE_BOARD', blank=True)),
                ('poster_location_notice_board', models.CharField(max_length=5, null=True, db_column='POSTER_LOCATION_NOTICE_BOARD', blank=True)),
                ('notice_board_lit', models.CharField(max_length=5, null=True, db_column='NOTICE_BOARD_LIT', blank=True)),
                ('notice_board_size_length', models.FloatField(default=0.0, null=True, db_column='NOTICE_BOARD_SIZE_LENGTH', blank=True)),
                ('notice_board_size_breadth', models.FloatField(default=0.0, null=True, db_column='NOTICE_BOARD_SIZE_BREADTH', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
                ('adinventory_id', models.CharField(max_length=22, null=True, db_column='ADINVENTORY_ID', blank=True)),
            ],
            options={
                'db_table': 'notice_board_details',
            },
        ),
        migrations.CreateModel(
            name='OperationsInfo',
            fields=[
                ('operator_id', models.CharField(max_length=10, serialize=False, primary_key=True, db_column='OPERATOR_ID')),
                ('operator_name', models.CharField(max_length=100, null=True, db_column='OPERATOR_NAME', blank=True)),
                ('operator_email', models.CharField(max_length=50, null=True, db_column='OPERATOR_EMAIL', blank=True)),
                ('operator_company', models.CharField(max_length=100, null=True, db_column='OPERATOR_COMPANY', blank=True)),
                ('operator_phone_number', models.IntegerField(null=True, db_column='OPERATOR_PHONE_NUMBER', blank=True)),
                ('comments_1', models.CharField(max_length=500, null=True, db_column='COMMENTS_1', blank=True)),
                ('comments_2', models.CharField(max_length=500, null=True, db_column='COMMENTS_2', blank=True)),
                ('company_id', models.CharField(max_length=50, null=True, db_column='COMPANY_ID', blank=True)),
                ('company_address', models.CharField(max_length=250, null=True, db_column='COMPANY_ADDRESS', blank=True)),
            ],
            options={
                'db_table': 'operations_info',
            },
        ),
        migrations.CreateModel(
            name='PoleInventory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('inventory_type_id', models.CharField(max_length=20, null=True, db_column='INVENTORY_TYPE_ID', blank=True)),
                ('adinventory_id', models.CharField(max_length=22, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('pole_hoarding_size', models.CharField(max_length=10, null=True, db_column='POLE_HOARDING_SIZE', blank=True)),
                ('pole_area', models.CharField(max_length=10, null=True, db_column='POLE_AREA', blank=True)),
                ('pole_hoarding_type', models.CharField(max_length=20, null=True, db_column='POLE_HOARDING_TYPE', blank=True)),
                ('pole_lit_status', models.CharField(max_length=5, db_column='POLE_LIT_STATUS', blank=True)),
                ('pole_sides', models.CharField(max_length=10, null=True, db_column='POLE_SIDES', blank=True)),
                ('pole_monthly_price_society', models.FloatField(null=True, db_column='POLE_MONTHLY_PRICE_SOCIETY')),
                ('pole_quarterly_price_society', models.FloatField(null=True, db_column='POLE_QUARTERLY_PRICE_SOCIETY')),
                ('pole_monthly_price_business', models.FloatField(null=True, db_column='POLE_MONTHLY_PRICE_BUSINESS')),
                ('pole_quarterly_price_business', models.FloatField(null=True, db_column='POLE_QUARTERLY_PRICE_BUSINESS')),
                ('pole_location', models.CharField(max_length=50, null=True, db_column='POLE_LOCATION', blank=True)),
                ('pole_inventory_status', models.CharField(max_length=20, null=True, db_column='POLE_INVENTORY_STATUS', blank=True)),
            ],
            options={
                'db_table': 'pole_inventory',
            },
        ),
        migrations.CreateModel(
            name='PosterInventory',
            fields=[
                ('adinventory_id', models.CharField(max_length=25, serialize=False, primary_key=True, db_column='ADINVENTORY_ID')),
                ('tower_name', models.CharField(max_length=20, null=True, db_column='TOWER_NAME', blank=True)),
                ('poster_location', models.CharField(max_length=50, null=True, db_column='POSTER_LOCATION', blank=True)),
                ('poster_area', models.CharField(max_length=10, null=True, db_column='POSTER_AREA', blank=True)),
                ('inventory_status', models.CharField(max_length=20, null=True, db_column='INVENTORY_STATUS', blank=True)),
                ('poster_count_per_notice_board', models.IntegerField(null=True, db_column='POSTER_COUNT_PER_NOTICE_BOARD', blank=True)),
                ('inventory_type_id', models.CharField(max_length=255, null=True, db_column='INVENTORY_TYPE_ID', blank=True)),
            ],
            options={
                'db_table': 'poster_inventory',
            },
        ),
        migrations.CreateModel(
            name='PosterInventoryMapping',
            fields=[
                ('inventory_mapping_id', models.AutoField(serialize=False, primary_key=True, db_column='INVENTORY_MAPPING_ID')),
                ('inventory_type_id', models.CharField(max_length=20, null=True, db_column='INVENTORY_TYPE_ID', blank=True)),
                ('poster_adinventory_id', models.CharField(max_length=22, null=True, db_column='POSTER_ADINVENTORY_ID', blank=True)),
                ('standee_adinventory_id', models.CharField(max_length=22, null=True, db_column='STANDEE_ADINVENTORY_ID', blank=True)),
                ('banner_adinventory_id', models.CharField(max_length=22, null=True, db_column='BANNER_ADINVENTORY_ID', blank=True)),
                ('stall_adinventory_id', models.CharField(max_length=22, null=True, db_column='STALL_ADINVENTORY_ID', blank=True)),
            ],
            options={
                'db_table': 'poster_inventory_mapping',
            },
        ),
        migrations.CreateModel(
            name='PriceMapping',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('society_price', models.IntegerField(db_column='SUGGESTED_SOCIETY_PRICE')),
                ('business_price', models.IntegerField(db_column='ACTUAL_SOCIETY_PRICE')),
                ('adinventory_id', models.ForeignKey(related_name='prices', db_column='ADINVENTORY_LOCATION_MAPPING_ID', blank=True, to='v0.AdInventoryLocationMapping', null=True)),
                ('adinventory_type', models.ForeignKey(db_column='ADINVENTORY_TYPE_ID', blank=True, to='v0.AdInventoryType', null=True)),
                ('duration_type', models.ForeignKey(db_column='DURATION_ID', blank=True, to='v0.DurationType', null=True)),
            ],
            options={
                'db_table': 'price_mapping',
            },
        ),
        migrations.CreateModel(
            name='PriceMappingDefault',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('society_price', models.IntegerField(db_column='SUGGESTED_SOCIETY_PRICE')),
                ('business_price', models.IntegerField(db_column='ACTUAL_SOCIETY_PRICE')),
                ('adinventory_type', models.ForeignKey(db_column='ADINVENTORY_TYPE_ID', blank=True, to='v0.AdInventoryType', null=True)),
                ('duration_type', models.ForeignKey(db_column='DURATION_ID', blank=True, to='v0.DurationType', null=True)),
            ],
            options={
                'db_table': 'price_mapping_default',
            },
        ),
        migrations.CreateModel(
            name='ProposalCenterMapping',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('center_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=150, null=True, blank=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('radius', models.FloatField()),
                ('subarea', models.CharField(max_length=35)),
                ('area', models.CharField(max_length=35)),
                ('city', models.CharField(max_length=35)),
                ('pincode', models.IntegerField()),
            ],
            options={
                'db_table': 'PROPOSAL_CENTER_MAPPING',
            },
        ),
        migrations.CreateModel(
            name='ProposalCenterMappingVersion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('center_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=150, null=True, blank=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('radius', models.FloatField()),
                ('subarea', models.CharField(max_length=35)),
                ('area', models.CharField(max_length=35)),
                ('city', models.CharField(max_length=35)),
                ('pincode', models.IntegerField()),
            ],
            options={
                'db_table': 'PROPOSAL_CENTER_MAPPING_VERSION',
            },
        ),
        migrations.CreateModel(
            name='ProposalInfo',
            fields=[
                ('proposal_id', models.CharField(max_length=15, serialize=False, primary_key=True, db_column='PROPOSAL ID')),
                ('name', models.CharField(max_length=50, db_column='NAME', blank=True)),
                ('payment_status', models.BooleanField(default=False, db_column='PAYMENT STATUS')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('updated_by', models.CharField(default='Admin', max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(default='Admin', max_length=50)),
                ('tentative_cost', models.IntegerField(default=5000)),
                ('tentative_start_date', models.DateTimeField(null=True)),
                ('tentative_end_date', models.DateTimeField(null=True)),
                ('account', models.ForeignKey(related_name='proposals', db_column='ACCOUNT', to='v0.AccountInfo')),
            ],
            options={
                'db_table': 'PROPOSAL_INFO',
            },
        ),
        migrations.CreateModel(
            name='ProposalInfoVersion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50, db_column='NAME', blank=True)),
                ('payment_status', models.BooleanField(default=False, db_column='PAYMENT STATUS')),
                ('created_on', models.DateTimeField()),
                ('created_by', models.CharField(default='Admin', max_length=50)),
                ('tentative_cost', models.IntegerField(default=5000)),
                ('tentative_start_date', models.DateTimeField(null=True)),
                ('tentative_end_date', models.DateTimeField(null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('proposal', models.ForeignKey(related_name='proposal_versions', db_column='PROPOSAL', to='v0.ProposalInfo')),
            ],
            options={
                'db_table': 'PROPOSAL_INFO_VERSION',
            },
        ),
        migrations.CreateModel(
            name='RatioDetails',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('supplier_id', models.CharField(max_length=20, db_column='SUPPLIER_ID')),
                ('machadalo_index', models.CharField(max_length=30, db_column='MACHADALO_INDEX')),
                ('age_proportions', models.CharField(max_length=15, null=True, db_column='AGE_PROPORTIONS', blank=True)),
                ('flat_avg_rental_persqft', models.CharField(max_length=10, null=True, db_column='FLAT_AVG_RENTAL_PERSQFT', blank=True)),
                ('flat_avg_size', models.CharField(max_length=5, null=True, db_column='FLAT_AVG_SIZE', blank=True)),
                ('flat_sale_cost_persqft', models.CharField(max_length=5, null=True, db_column='FLAT_SALE_COST_PERSQFT', blank=True)),
                ('wall_count', models.IntegerField(null=True, db_column='WALL_COUNT', blank=True)),
                ('major_event_count', models.IntegerField(null=True, db_column='MAJOR_EVENT_COUNT', blank=True)),
            ],
            options={
                'db_table': 'ratio_details',
            },
        ),
        migrations.CreateModel(
            name='ShortlistedSpaces',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('supplier_code', models.CharField(max_length=4)),
                ('object_id', models.CharField(max_length=12)),
                ('buffer_status', models.BooleanField(default=False)),
                ('content_type', models.ForeignKey(related_name='spaces', to='contenttypes.ContentType')),
            ],
            options={
                'db_table': 'SHORTLISTED_SPACES',
            },
        ),
        migrations.CreateModel(
            name='ShortlistedSpacesVersion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('supplier_code', models.CharField(max_length=4)),
                ('object_id', models.CharField(max_length=12)),
                ('buffer_status', models.BooleanField(default=False)),
                ('content_type', models.ForeignKey(related_name='spaces_version', to='contenttypes.ContentType')),
            ],
            options={
                'db_table': 'SHORTLISTED_SPACES_VERSION',
            },
        ),
        migrations.CreateModel(
            name='Signup',
            fields=[
                ('user_id', models.AutoField(serialize=False, primary_key=True, db_column='USER_ID')),
                ('first_name', models.TextField(null=True, db_column='FIRST_NAME', blank=True)),
                ('email', models.TextField(null=True, db_column='EMAIL', blank=True)),
                ('password', models.TextField(null=True, db_column='PASSWORD', blank=True)),
                ('login_type', models.TextField(null=True, db_column='LOGIN_TYPE', blank=True)),
                ('system_generated_id', models.BigIntegerField(db_column='SYSTEM_GENERATED_ID')),
                ('adminstrator_approved', models.CharField(max_length=255, null=True, db_column='ADMINSTRATOR_APPROVED', blank=True)),
                ('company_name', models.CharField(max_length=255, null=True, db_column='COMPANY_NAME', blank=True)),
                ('name', models.CharField(max_length=255, null=True, db_column='NAME', blank=True)),
                ('mobile_no', models.CharField(max_length=255, null=True, db_column='MOBILE_NO', blank=True)),
                ('signup_status', models.CharField(max_length=255, null=True, db_column='SIGNUP_STATUS', blank=True)),
            ],
            options={
                'db_table': 'signup',
            },
        ),
        migrations.CreateModel(
            name='SocietyFlat',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('flat_tag', models.CharField(max_length=20, null=True, db_column='FLAT_TAG', blank=True)),
                ('flat_type', models.CharField(max_length=20, db_column='FLAT_TYPE')),
                ('flat_count', models.IntegerField(null=True, db_column='FLAT_COUNT', blank=True)),
            ],
            options={
                'db_table': 'society_flat',
            },
        ),
        migrations.CreateModel(
            name='SocietyInventoryBooking',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('ad_location', models.CharField(max_length=50, db_column='AD_LOCATION', blank=True)),
                ('start_date', models.DateField(null=True, db_column='START_DATE')),
                ('end_date', models.DateField(null=True, db_column='END_DATE')),
                ('audit_date', models.DateField(null=True, db_column='AUDIT_DATE')),
                ('adinventory_type', models.ForeignKey(db_column='ADINVENTORY_TYPE', to='v0.CampaignTypeMapping', null=True)),
                ('campaign', models.ForeignKey(related_name='inventory_bookings', db_column='CAMPAIGN_ID', to='v0.Campaign', null=True)),
            ],
            options={
                'db_table': 'society_inventory_booking',
            },
        ),
        migrations.CreateModel(
            name='SocietyLeads',
            fields=[
                ('id', models.CharField(max_length=100, serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(default='0', max_length=15, null=True, blank=True)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'db_table': 'society_leads',
            },
        ),
        migrations.CreateModel(
            name='SocietyMajorEvents',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('Ganpati', models.BooleanField(default=False, db_column='Ganpati')),
                ('Diwali', models.BooleanField(default=False, db_column='Diwali')),
                ('Lohri', models.BooleanField(default=False, db_column='Lohri')),
                ('Navratri', models.BooleanField(default=False, db_column='Navratri')),
                ('Holi', models.BooleanField(default=False, db_column='Holi')),
                ('Janmashtami', models.BooleanField(default=False, db_column='Janmashtami')),
                ('IndependenceDay', models.BooleanField(default=False, db_column='IndependenceDay')),
                ('RepublicDay', models.BooleanField(default=False, db_column='RepublicDay')),
                ('SportsDay', models.BooleanField(default=False, db_column='SportsDay')),
                ('AnnualDay', models.BooleanField(default=False, db_column='AnnualDay')),
                ('Christmas', models.BooleanField(default=False, db_column='Christmas')),
                ('NewYear', models.BooleanField(default=False, db_column='NewYear')),
                ('past_major_events', models.IntegerField(null=True, db_column='PAST_MAJOR_EVENTS', blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocietyTower',
            fields=[
                ('tower_id', models.AutoField(serialize=False, primary_key=True, db_column='TOWER_ID')),
                ('tower_tag', models.CharField(max_length=20, null=True, db_column='TOWER_TAG', blank=True)),
                ('tower_name', models.CharField(max_length=20, null=True, db_column='TOWER_NAME', blank=True)),
                ('flat_count_per_tower', models.IntegerField(null=True, db_column='FLAT_COUNT_PER_TOWER', blank=True)),
                ('floor_count_per_tower', models.IntegerField(null=True, db_column='FLOOR_COUNT_PER_TOWER', blank=True)),
                ('notice_board_count_per_tower', models.IntegerField(default=0, db_column='NOTICE_BOARD_COUNT_PER_TOWER')),
                ('standee_location_count_per_tower', models.IntegerField(null=True, db_column='STANDEE_LOCATION_COUNT_PER_TOWER', blank=True)),
                ('mailbox_count_per_tower', models.IntegerField(null=True, db_column='MAILBOX_COUNT_PER_TOWER', blank=True)),
                ('stall_count_per_tower', models.IntegerField(null=True, db_column='STALL_COUNT_PER_TOWER', blank=True)),
                ('tower_location', models.CharField(max_length=100, null=True, db_column='TOWER_LOCATION', blank=True)),
                ('tower_resident_count', models.IntegerField(null=True, db_column='TOWER_RESIDENT_COUNT', blank=True)),
                ('lift_count', models.IntegerField(default=0, db_column='LIFT_COUNT')),
                ('flat_type_count', models.IntegerField(default=0, db_column='FLAT_TYPE_COUNT')),
                ('standee_count', models.IntegerField(default=0, db_column='STANDEE_COUNT')),
                ('average_rent_per_sqft', models.IntegerField(null=True, db_column='AVERAGE_RENT_PER_SQFT', blank=True)),
            ],
            options={
                'db_table': 'society_tower',
            },
        ),
        migrations.CreateModel(
            name='SpaceMapping',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('society_allowed', models.BooleanField(default=False)),
                ('society_count', models.IntegerField(default=0)),
                ('society_buffer_count', models.IntegerField(default=0)),
                ('corporate_allowed', models.BooleanField(default=False)),
                ('corporate_count', models.IntegerField(default=0)),
                ('corporate_buffer_count', models.IntegerField(default=0)),
                ('gym_allowed', models.BooleanField(default=False)),
                ('gym_count', models.IntegerField(default=0)),
                ('gym_buffer_count', models.IntegerField(default=0)),
                ('salon_allowed', models.BooleanField(default=False)),
                ('salon_count', models.IntegerField(default=0)),
                ('salon_buffer_count', models.IntegerField(default=0)),
                ('center', models.OneToOneField(related_name='space_mappings', to='v0.ProposalCenterMapping')),
                ('proposal', models.ForeignKey(related_name='space_mapping', to='v0.ProposalInfo')),
            ],
            options={
                'db_table': 'SPACE_MAPPING',
            },
        ),
        migrations.CreateModel(
            name='SpaceMappingVersion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('society_allowed', models.BooleanField(default=False)),
                ('society_count', models.IntegerField(default=0)),
                ('society_buffer_count', models.IntegerField(default=0)),
                ('corporate_allowed', models.BooleanField(default=False)),
                ('corporate_count', models.IntegerField(default=0)),
                ('corporate_buffer_count', models.IntegerField(default=0)),
                ('gym_allowed', models.BooleanField(default=False)),
                ('gym_count', models.IntegerField(default=0)),
                ('gym_buffer_count', models.IntegerField(default=0)),
                ('salon_allowed', models.BooleanField(default=False)),
                ('salon_count', models.IntegerField(default=0)),
                ('salon_buffer_count', models.IntegerField(default=0)),
                ('center_version', models.OneToOneField(related_name='space_mappings_version', to='v0.ProposalCenterMappingVersion')),
                ('proposal_version', models.ForeignKey(related_name='space_mapping_version', to='v0.ProposalInfoVersion')),
            ],
            options={
                'db_table': 'SPACE_MAPPING_VERSION',
            },
        ),
        migrations.CreateModel(
            name='SportsInfra',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('sports_infrastructure_id', models.CharField(max_length=20, null=True, db_column='SPORTS_INFRASTRUCTURE_ID', blank=True)),
                ('stall_spaces_count', models.IntegerField(null=True, db_column='STALL_SPACES_COUNT', blank=True)),
                ('banner_spaces_count', models.IntegerField(null=True, db_column='BANNER_SPACES_COUNT', blank=True)),
                ('poster_spaces_count', models.IntegerField(null=True, db_column='POSTER_SPACES_COUNT', blank=True)),
                ('standee_spaces_count', models.IntegerField(null=True, db_column='STANDEE_SPACES_COUNT', blank=True)),
                ('sponsorship_amount_society', models.IntegerField(null=True, db_column='SPONSORSHIP_AMOUNT_SOCIETY', blank=True)),
                ('sponsorship_amount_business', models.IntegerField(null=True, db_column='SPONSORSHIP_AMOUNT_BUSINESS)', blank=True)),
                ('start_date', models.DateField(null=True, db_column='START_DATE', blank=True)),
                ('end_date', models.DateField(null=True, db_column='END_DATE', blank=True)),
                ('outside_participants_allowed', models.CharField(max_length=5, null=True, db_column='OUTSIDE_PARTICIPANTS_ALLOWED', blank=True)),
                ('lit_unlit', models.CharField(max_length=5, null=True, db_column='LIT_UNLIT', blank=True)),
                ('daily_infra_charges_society', models.IntegerField(null=True, db_column='DAILY_INFRA_CHARGES_SOCIETY', blank=True)),
                ('daily_infra_charges_business', models.IntegerField(null=True, db_column='DAILY_INFRA_CHARGES_BUSINESS', blank=True)),
                ('play_areas_count', models.IntegerField(null=True, db_column='PLAY_AREAS_COUNT', blank=True)),
                ('play_area_size', models.IntegerField(null=True, db_column='PLAY_AREA_SIZE', blank=True)),
                ('sports_type', models.CharField(max_length=20, null=True, db_column='SPORTS_TYPE', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
            ],
            options={
                'db_table': 'sports_infra',
            },
        ),
        migrations.CreateModel(
            name='StallInventory',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=22, db_column='ADINVENTORY_ID')),
                ('stall_small', models.BooleanField(default=False, db_column='STALL_SMALL')),
                ('stall_canopy', models.BooleanField(default=False, db_column='STALL_CANOPY')),
                ('stall_medium', models.BooleanField(default=False, db_column='STALL_MEDIUM')),
                ('car_standard', models.BooleanField(default=False, db_column='CAR_STANDARD')),
                ('car_premium', models.BooleanField(default=False, db_column='CAR_PREMIUM')),
                ('stall_morning', models.BooleanField(default=False, db_column='STALL_MORNING')),
                ('stall_evening', models.BooleanField(default=False, db_column='STALL_EVENING')),
                ('stall_time_both', models.BooleanField(default=False, db_column='STALL_TIME_BOTH')),
                ('stall_weekdays', models.BooleanField(default=False, db_column='STALL_WEEKDAYS')),
                ('stall_location', models.CharField(max_length=50, null=True, db_column='STALL_LOCATION', blank=True)),
                ('electricity_available', models.BooleanField(default=False, db_column='ELECTRICITY_AVAILABLE_STALLS')),
                ('electricity_charges_daily', models.FloatField(max_length=50, null=True, db_column='ELECTRICITY_CHARGES_DAILY', blank=True)),
                ('sound_system_allowed', models.BooleanField(default=False, db_column='SOUND_SYSTEM_ALLOWED')),
                ('furniture_available', models.BooleanField(default=False, db_column='STALL_FURNITURE_AVAILABLE')),
                ('furniture_details', models.CharField(max_length=50, null=True, db_column='STALL_FURNITURE_DETAILS', blank=True)),
                ('stall_size', models.CharField(max_length=20, null=True, db_column='STALL_SIZE', blank=True)),
                ('stall_timing', models.CharField(max_length=20, null=True, db_column='STALL_TIMINGS', blank=True)),
            ],
            options={
                'db_table': 'stall_inventory',
            },
        ),
        migrations.CreateModel(
            name='StandeeInventory',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=22, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('inventory_type_id', models.CharField(max_length=20, null=True, db_column='INVENTORY_TYPE_ID', blank=True)),
                ('inventory_status', models.CharField(max_length=15, null=True, db_column='INVENTORY_STATUS', blank=True)),
                ('standee_location', models.CharField(max_length=50, null=True, db_column='STANDEE_LOCATION', blank=True)),
                ('type', models.CharField(max_length=10, null=True, db_column='STANDEE_TYPE', blank=True)),
                ('standee_size', models.CharField(max_length=10, null=True, db_column='STANDEE_SIZE', blank=True)),
                ('standee_sides', models.CharField(max_length=10, null=True, db_column='STANDEE_SIDES', blank=True)),
                ('tower', models.ForeignKey(related_name='standees', db_column='TOWER_ID', blank=True, to='v0.SocietyTower', null=True)),
            ],
            options={
                'db_table': 'standee_inventory',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('state_name', models.CharField(max_length=50, null=True, db_column='STATE_NAME')),
                ('state_code', models.CharField(max_length=5, null=True, db_column='STATE_CODE')),
            ],
            options={
                'db_table': 'state',
            },
        ),
        migrations.CreateModel(
            name='StreetFurniture',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('adinventory_id', models.CharField(max_length=22, null=True, db_column='ADINVENTORY_ID', blank=True)),
                ('no_of_furniture', models.IntegerField(null=True, db_column='NO_OF_FURNITURE', blank=True)),
                ('type_of_furniture', models.CharField(max_length=20, null=True, db_column='TYPE_OF_FURNITURE', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
                ('comment_1', models.TextField(null=True, db_column='COMMENT_1', blank=True)),
                ('comment_2', models.TextField(null=True, db_column='COMMENT_2', blank=True)),
                ('furniture_status', models.CharField(max_length=10, null=True, db_column='FURNITURE_STATUS', blank=True)),
            ],
            options={
                'db_table': 'street_furniture',
            },
        ),
        migrations.CreateModel(
            name='SupplierInfo',
            fields=[
                ('supplier_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='SUPPLIER_ID')),
                ('supplier_name', models.CharField(max_length=30, null=True, db_column='SUPPLIER_NAME', blank=True)),
                ('supplier_emailid', models.CharField(max_length=100, null=True, db_column='SUPPLIER_EMAILID', blank=True)),
                ('supplier_phone_no', models.CharField(max_length=15, null=True, db_column='SUPPLIER_PHONE_NO', blank=True)),
                ('supplier_location', models.CharField(max_length=70, null=True, db_column='SUPPLIER_LOCATION', blank=True)),
                ('supplier_business_type', models.CharField(max_length=30, null=True, db_column='SUPPLIER_BUSINESS_TYPE', blank=True)),
                ('comments_1', models.CharField(max_length=500, null=True, db_column='COMMENTS_1', blank=True)),
                ('comments_2', models.CharField(max_length=500, null=True, db_column='COMMENTS_2', blank=True)),
                ('supplier_address', models.CharField(max_length=250, null=True, db_column='SUPPLIER_ADDRESS', blank=True)),
                ('total_inventory', models.CharField(max_length=5, null=True, db_column='TOTAL_INVENTORY', blank=True)),
                ('total_inventory_currently_released', models.CharField(max_length=5, null=True, db_column='TOTAL_INVENTORY_CURRENTLY_RELEASED', blank=True)),
                ('total_inventory_currently_released_audit', models.CharField(max_length=5, null=True, db_column='TOTAL_INVENTORY_CURRENTLY_RELEASED_AUDIT', blank=True)),
                ('pan_id', models.CharField(max_length=10, null=True, db_column='PAN_ID', blank=True)),
                ('tan_id', models.CharField(max_length=12, null=True, db_column='TAN_ID', blank=True)),
                ('supplier_type', models.CharField(max_length=20, null=True, db_column='SUPPLIER_TYPE', blank=True)),
                ('mapping_date', models.DateField(null=True, db_column='MAPPING_DATE', blank=True)),
                ('agreement_term_start', models.DateField(null=True, db_column='AGREEMENT_TERM_START', blank=True)),
                ('agreement_term_end', models.DateField(null=True, db_column='AGREEMENT_TERM_END', blank=True)),
                ('current_status', models.DateField(null=True, db_column='CURRENT_STATUS', blank=True)),
            ],
            options={
                'db_table': 'supplier_info',
            },
        ),
        migrations.CreateModel(
            name='SupplierTypeCode',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('supplier_type_name', models.CharField(max_length=20, null=True, db_column='SUPPLIER_TYPE_NAME')),
                ('supplier_type_code', models.CharField(max_length=5, null=True, db_column='SUPPLIER_TYPE_CODE')),
            ],
            options={
                'db_table': 'supplier_type_code',
            },
        ),
        migrations.CreateModel(
            name='SupplierTypeCorporate',
            fields=[
                ('supplier_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='SUPPLIER_ID')),
                ('supplier_code', models.CharField(max_length=3, null=True, db_column='SUPPLIER_CODE')),
                ('name', models.CharField(max_length=70, null=True, db_column='CORPORATE_NAME', blank=True)),
                ('address1', models.CharField(max_length=250, null=True, db_column='CORPORATE_ADDRESS1', blank=True)),
                ('address2', models.CharField(max_length=250, null=True, db_column='CORPORATE_ADDRESS2', blank=True)),
                ('zipcode', models.IntegerField(null=True, db_column='CORPORATE_ZIP', blank=True)),
                ('city', models.CharField(max_length=250, null=True, db_column='CORPORATE_CITY', blank=True)),
                ('state', models.CharField(max_length=250, null=True, db_column='CORPORATE_STATE', blank=True)),
                ('longitude', models.FloatField(default=0.0, null=True, db_column='CORPORATE_LONGITUDE', blank=True)),
                ('locality', models.CharField(max_length=30, null=True, db_column='CORPORATE_LOCALITY', blank=True)),
                ('subarea', models.CharField(max_length=30, null=True, db_column='CORPORATE_SUB_AREA', blank=True)),
                ('latitude', models.FloatField(default=0.0, null=True, db_column='CORPORATE_LATITUDE', blank=True)),
                ('machadalo_index', models.CharField(max_length=30, null=True, db_column='MACHADALO_INDEX', blank=True)),
                ('locality_rating', models.CharField(max_length=50, null=True, db_column='CORPORATE_LOCALITY_RATING', blank=True)),
                ('corporate_type', models.CharField(max_length=25, null=True, db_column='CORPORATE_TYPE', blank=True)),
                ('industry_segment', models.CharField(max_length=30, null=True, db_column='CORPORATE_INDUSTRY_SEGMENT', blank=True)),
                ('possession_year', models.CharField(max_length=5, null=True, db_column='CORPORATE_AGE', blank=True)),
                ('building_count', models.IntegerField(null=True, db_column='CORPORATE_BUILDING_COUNT', blank=True)),
                ('floorperbuilding_count', models.IntegerField(null=True, db_column='CORPORATE_FLOORPERBUILDING_COUNT', blank=True)),
                ('totalcompanies_count', models.IntegerField(null=True, db_column='CORPORATE_TOTALCOMPANIES_COUNT', blank=True)),
                ('totalemployees_count', models.IntegerField(null=True, db_column='CORPORATE_TOTALEMPLOYEES_COUNT', blank=True)),
                ('isrealestateallowed', models.BooleanField(default=False, db_column='CORPORATE_ISREALESTATEALLOWED')),
                ('quality_rating', models.CharField(max_length=50, null=True, db_column='QUALITY_RATING', blank=True)),
                ('total_area', models.FloatField(default=0.0, null=True, db_column='TOTAL_AREA', blank=True)),
                ('quantity_rating', models.CharField(max_length=50, null=True, db_column='QUANTITY_RATING', blank=True)),
                ('luxurycars_count', models.IntegerField(null=True, db_column='LUXURYCARS_COUNT', blank=True)),
                ('standardcars_count', models.IntegerField(null=True, db_column='STANDARDCARS_COUNT', blank=True)),
                ('totallift_count', models.IntegerField(null=True, db_column='TOTALLIFT_COUNT', blank=True)),
                ('parkingspaces_count', models.IntegerField(null=True, db_column='PARKINGSPACES_COUNT', blank=True)),
                ('entryexit_count', models.IntegerField(null=True, db_column='ENTRYEXIT_COUNT', blank=True)),
                ('openspaces_count', models.IntegerField(null=True, db_column='OPENSPACES_COUNT', blank=True)),
                ('constructionspaces_count', models.IntegerField(null=True, db_column='CONSTRUCTIONSPACES_COUNT', blank=True)),
                ('constructedspace', models.FloatField(default=0.0, null=True, db_column='CONSTRUCTEDSPACE', blank=True)),
                ('parkingspace', models.FloatField(default=0.0, null=True, db_column='PARKINGSPACE', blank=True)),
                ('openspace', models.FloatField(default=0.0, null=True, db_column='OPENSPACE', blank=True)),
                ('averagerent', models.FloatField(default=0.0, null=True, db_column='AVERAGERENT', blank=True)),
                ('corporate_name', models.CharField(max_length=30, null=True, db_column='CORPORATE_NAME_PAYMENT', blank=True)),
                ('bank_name', models.CharField(max_length=30, null=True, db_column='BANK_NAME', blank=True)),
                ('ifsc_code', models.CharField(max_length=30, null=True, db_column='IFSC_CODE', blank=True)),
                ('account_number', models.CharField(max_length=30, null=True, db_column='ACCOUNT_NUMBER', blank=True)),
            ],
            options={
                'db_table': 'supplier_corporate',
            },
        ),
        migrations.CreateModel(
            name='SupplierTypeGym',
            fields=[
                ('supplier_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='SUPPLIER_ID')),
                ('supplier_code', models.CharField(max_length=3, null=True, db_column='SUPPLIER_CODE')),
                ('name', models.CharField(max_length=70, null=True, db_column='NAME', blank=True)),
                ('address1', models.CharField(max_length=250, null=True, db_column='ADDRESS1', blank=True)),
                ('address2', models.CharField(max_length=250, null=True, db_column='ADDRESS2', blank=True)),
                ('zipcode', models.IntegerField(null=True, db_column='ZIP', blank=True)),
                ('city', models.CharField(max_length=250, null=True, db_column='CITY', blank=True)),
                ('state', models.CharField(max_length=250, null=True, db_column='STATE', blank=True)),
                ('latitude', models.FloatField(default=0.0, null=True, db_column='LATITUDE', blank=True)),
                ('longitude', models.FloatField(default=0.0, null=True, db_column='LONGITUDE', blank=True)),
                ('locality', models.CharField(max_length=30, null=True, db_column='LOCALITY', blank=True)),
                ('subarea', models.CharField(max_length=30, null=True, db_column='SUB_AREA', blank=True)),
                ('gym_type', models.CharField(max_length=30, null=True, db_column='GYM_TYPE', blank=True)),
                ('category', models.CharField(max_length=30, null=True, db_column='CATEGORY', blank=True)),
                ('locality_rating', models.CharField(max_length=30, null=True, db_column='LOCALITY_RATING', blank=True)),
                ('gym_type_chain', models.CharField(max_length=30, null=True, db_column='GYM_TYPE_CHAIN', blank=True)),
                ('machadalo_index', models.CharField(max_length=30, null=True, db_column='MACHADALO_INDEX', blank=True)),
                ('chain_origin', models.CharField(max_length=30, null=True, db_column='GYM_ORIGIN', blank=True)),
                ('totalmembership_perannum', models.IntegerField(null=True, db_column='TOTALMEMBERSHIP_PERANNUM', blank=True)),
                ('footfall_day', models.IntegerField(null=True, db_column='FOOTFALL_DAY', blank=True)),
                ('footfall_weekend', models.IntegerField(null=True, db_column='FOOTFALL_WEEKEND', blank=True)),
                ('advertising_media', models.CharField(max_length=30, null=True, db_column='AD_MEDIA', blank=True)),
                ('dietchart_price', models.IntegerField(null=True, db_column='DIETCHART_PRICE', blank=True)),
                ('stall_price_day', models.IntegerField(null=True, db_column='STALL_PRICE_DAY', blank=True)),
                ('stall_price_two_day', models.IntegerField(null=True, db_column='', blank=True)),
                ('standee_price_week', models.IntegerField(null=True, db_column='STANDEE_PRICE_WEEK', blank=True)),
                ('standee_price_two_week', models.IntegerField(null=True, db_column='STANDEE_PRICE_TWO_WEEK', blank=True)),
                ('standee_price_month', models.IntegerField(null=True, db_column='STANDEE_PRICE_MONTH', blank=True)),
                ('standee_places', models.IntegerField(null=True, db_column='STANDEE_PLACES', blank=True)),
                ('standee_location', models.CharField(max_length=30, null=True, db_column='STANDEE_LOCATION', blank=True)),
                ('banner_price_week', models.IntegerField(null=True, db_column='BANNER_PRICE_WEEK', blank=True)),
                ('banner_price_month', models.IntegerField(null=True, db_column='BANNER_PRICE_MONTH', blank=True)),
                ('banner_places', models.IntegerField(null=True, db_column='BANNER_PLACES', blank=True)),
                ('banner_location', models.CharField(max_length=30, null=True, db_column='BANNER_LOCATION', blank=True)),
                ('flyer_price_month', models.IntegerField(null=True, db_column='FLYER_PRICE_MONTH', blank=True)),
                ('flyer_distribution', models.CharField(max_length=30, null=True, db_column='FLYER_DISTRIBUTION', blank=True)),
                ('poster_price_week', models.IntegerField(null=True, db_column='POSTER_PRICE_WEEK', blank=True)),
                ('poster_price_month', models.IntegerField(null=True, db_column='POSTER_PRICE_MONTH', blank=True)),
                ('poster_places', models.IntegerField(null=True, db_column='POSTER_PLACES', blank=True)),
                ('mirrorstrip_count', models.IntegerField(null=True, db_column='MIRRORSTRIP_COUNT', blank=True)),
                ('mirrorstrip_price_week', models.IntegerField(null=True, db_column='MIRRORSTRIP_PRICE_WEEK', blank=True)),
                ('mirrorstrip_price_month', models.IntegerField(null=True, db_column='MIRRORSTRIP_PRICE_MONTH', blank=True)),
                ('locker_count', models.IntegerField(null=True, db_column='LOCKER_COUNT', blank=True)),
                ('locker_price_week', models.IntegerField(null=True, db_column='LOCKER_PRICE_WEEK', blank=True)),
                ('locker_price_month', models.IntegerField(null=True, db_column='LOCKER_PRICE_MONTH', blank=True)),
                ('wall_price_month', models.IntegerField(null=True, db_column='WALL_PRICE_MONTH', blank=True)),
                ('wall_price_three_month', models.IntegerField(null=True, db_column='WALL_PRICE_THREE_MONTH', blank=True)),
                ('gym_name', models.CharField(max_length=30, null=True, db_column='GYM_NAME', blank=True)),
                ('bank_name', models.CharField(max_length=30, null=True, db_column='BANK_NAME', blank=True)),
                ('ifsc_code', models.CharField(max_length=30, null=True, db_column='IFSC_CODE', blank=True)),
                ('account_number', models.CharField(max_length=30, null=True, db_column='ACCOUNT_NUMBER', blank=True)),
            ],
            options={
                'db_table': 'supplier_gym',
            },
        ),
        migrations.CreateModel(
            name='SupplierTypeSalon',
            fields=[
                ('supplier_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='SUPPLIER_ID')),
                ('supplier_code', models.CharField(max_length=3, null=True, db_column='SUPPLIER_CODE')),
                ('name', models.CharField(max_length=70, null=True, db_column='NAME', blank=True)),
                ('address1', models.CharField(max_length=250, null=True, db_column='ADDRESS1', blank=True)),
                ('address2', models.CharField(max_length=250, null=True, db_column='ADDRESS2', blank=True)),
                ('zipcode', models.IntegerField(null=True, db_column='ZIP', blank=True)),
                ('city', models.CharField(max_length=250, null=True, db_column='CITY', blank=True)),
                ('state', models.CharField(max_length=250, null=True, db_column='STATE', blank=True)),
                ('latitude', models.FloatField(default=0.0, null=True, db_column='LATITUDE', blank=True)),
                ('longitude', models.FloatField(default=0.0, null=True, db_column='LONGITUDE', blank=True)),
                ('locality', models.CharField(max_length=30, null=True, db_column='LOCALITY', blank=True)),
                ('subarea', models.CharField(max_length=30, null=True, db_column='SUB_AREA', blank=True)),
                ('salon_type', models.CharField(max_length=30, null=True, db_column='SALON_TYPE', blank=True)),
                ('category', models.CharField(max_length=30, null=True, db_column='CATEGORY', blank=True)),
                ('locality_rating', models.CharField(max_length=30, null=True, db_column='LOCALITY_RATING', blank=True)),
                ('salon_type_chain', models.CharField(max_length=30, null=True, db_column='SALON_TYPE_CHAIN', blank=True)),
                ('machadalo_index', models.CharField(max_length=30, null=True, db_column='MACHADALO_INDEX', blank=True)),
                ('footfall_day', models.IntegerField(null=True, db_column='FOOTFALL_DAY', blank=True)),
                ('footfall_week', models.IntegerField(null=True, db_column='FOOTFALL_WEEK', blank=True)),
                ('footfall_weekend', models.IntegerField(null=True, db_column='FOOTFALL_WEEKEND', blank=True)),
                ('isspaavailable', models.BooleanField(default=False, db_column='ISSPAAVAILABLE')),
                ('advertising_media', models.CharField(max_length=30, null=True, db_column='AD_MEDIA', blank=True)),
                ('shop_size', models.CharField(max_length=30, null=True, db_column='SHOP_SIZE', blank=True)),
                ('floor_size', models.CharField(max_length=30, null=True, db_column='FLOOR_SIZE', blank=True)),
                ('standee_price_week', models.IntegerField(null=True, db_column='ST_PRICE_WEEK', blank=True)),
                ('standee_price_weekend', models.IntegerField(null=True, db_column='ST_PRICE_WEEKEND', blank=True)),
                ('standee_places', models.IntegerField(null=True, db_column='ST_PLACES', blank=True)),
                ('standee_location', models.IntegerField(null=True, db_column='ST_LOCATION', blank=True)),
                ('banner_price_week', models.IntegerField(null=True, db_column='BA_PRICE_WEEK', blank=True)),
                ('banner_price_weekend', models.IntegerField(null=True, db_column='BA_PRICE_WEEKEND', blank=True)),
                ('banner_places', models.IntegerField(null=True, db_column='BA_PLACES', blank=True)),
                ('banner_location', models.IntegerField(null=True, db_column='BA_LOCATION', blank=True)),
                ('flyer_price_week', models.IntegerField(null=True, db_column='FL_PRICE_WEEK', blank=True)),
                ('flyer_distribution', models.IntegerField(null=True, db_column='FL_DISTRIBUTION', blank=True)),
                ('poster_price_week', models.IntegerField(null=True, db_column='PO_PRICE_WEEK', blank=True)),
                ('poster_price_weekend', models.IntegerField(null=True, db_column='PO_PRICE_WEEKEND', blank=True)),
                ('poster_places', models.IntegerField(null=True, db_column='PO_PLACES', blank=True)),
                ('mirrorstrip_price_week', models.IntegerField(null=True, db_column='MS_PRICE_WEEK', blank=True)),
                ('mirrorstrip_price_month', models.IntegerField(null=True, db_column='MS_PRICE_MONTH', blank=True)),
                ('salon_name', models.CharField(max_length=30, null=True, db_column='SALON_NAME', blank=True)),
                ('bank_name', models.CharField(max_length=30, null=True, db_column='BANK_NAME', blank=True)),
                ('ifsc_code', models.CharField(max_length=30, null=True, db_column='IFSC_CODE', blank=True)),
                ('account_number', models.CharField(max_length=30, null=True, db_column='ACCOUNT_NUMBER', blank=True)),
            ],
            options={
                'db_table': 'supplier_salon',
            },
        ),
        migrations.CreateModel(
            name='SupplierTypeSociety',
            fields=[
                ('supplier_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='SUPPLIER_ID')),
                ('supplier_code', models.CharField(max_length=3, null=True, db_column='SUPPLIER_CODE')),
                ('society_name', models.CharField(max_length=70, null=True, db_column='SOCIETY_NAME', blank=True)),
                ('society_address1', models.CharField(max_length=250, null=True, db_column='SOCIETY_ADDRESS1', blank=True)),
                ('society_address2', models.CharField(max_length=250, null=True, db_column='SOCIETY_ADDRESS2', blank=True)),
                ('society_zip', models.IntegerField(null=True, db_column='SOCIETY_ZIP', blank=True)),
                ('society_city', models.CharField(max_length=250, null=True, db_column='SOCIETY_CITY', blank=True)),
                ('society_state', models.CharField(max_length=250, null=True, db_column='SOCIETY_STATE', blank=True)),
                ('society_longitude', models.FloatField(default=0.0, null=True, db_column='SOCIETY_LONGITUDE', blank=True)),
                ('society_locality', models.CharField(max_length=50, null=True, db_column='SOCIETY_LOCALITY', blank=True)),
                ('society_subarea', models.CharField(max_length=50, null=True, db_column='SOCIETY_SUBAREA', blank=True)),
                ('society_latitude', models.FloatField(default=0.0, null=True, db_column='SOCIETY_LATITUDE', blank=True)),
                ('society_location_type', models.CharField(max_length=50, null=True, db_column='SOCIETY_LOCATION_TYPE', blank=True)),
                ('society_type_quality', models.CharField(max_length=30, null=True, db_column='SOCIETY_TYPE_QUALITY', blank=True)),
                ('society_type_quantity', models.CharField(max_length=30, null=True, db_column='SOCIETY_TYPE_QUANTITY', blank=True)),
                ('society_off', models.BooleanField(default=False, db_column='SOCIETY_OFF')),
                ('society_weekly_off', models.CharField(max_length=30, null=True, db_column='SOCIETY_WEEKLY_OFF', blank=True)),
                ('society_count', models.BooleanField(default=True, db_column='SOCIETY_COUNT')),
                ('society_ratings', models.BooleanField(default=True, db_column='SOCIETY_RATINGS')),
                ('flat_count', models.IntegerField(null=True, db_column='FLAT_COUNT', blank=True)),
                ('resident_count', models.IntegerField(null=True, db_column='RESIDENT_COUNT', blank=True)),
                ('vacant_flat_count', models.IntegerField(null=True, db_column='VACANT_FLAT_COUNT')),
                ('avg_household_occupants', models.IntegerField(null=True, db_column='AVG_HOUSEHOLD_OCCUPANTS')),
                ('service_household_count', models.IntegerField(null=True, db_column='SERVICE_HOUSEHOLD_COUNT')),
                ('working_women_count', models.IntegerField(null=True, db_column='WORKING_WOMEN_COUNT')),
                ('bachelor_tenants_allowed', models.CharField(max_length=5, null=True, db_column='BACHELOR_TENANTS_ALLOWED')),
                ('pg_flat_count', models.IntegerField(null=True, db_column='PG_FLAT_COUNT')),
                ('women_occupants', models.IntegerField(null=True, db_column='WOMEN_OCCUPANTS')),
                ('avg_pg_occupancy', models.IntegerField(null=True, db_column='AVG_PG_OCCUPANCY')),
                ('cars_count', models.IntegerField(null=True, db_column='CARS_COUNT', blank=True)),
                ('luxury_cars_count', models.IntegerField(null=True, db_column='LUXURY_CARS_COUNT', blank=True)),
                ('lift_count', models.IntegerField(null=True, db_column='LIFT_COUNT', blank=True)),
                ('machadalo_index', models.FloatField(default=0.0, null=True, db_column='MACHADALO_INDEX', blank=True)),
                ('average_rent', models.FloatField(null=True, db_column='AVERAGE_RENT', blank=True)),
                ('food_tasting_allowed', models.CharField(max_length=5, null=True, db_column='FOOD_TASTING_ALLOWED', blank=True)),
                ('events_occurance', models.CharField(max_length=5, null=True, db_column='EVENTS_OCCURANCE', blank=True)),
                ('preferred_business_type', models.CharField(max_length=50, null=True, db_column='SOCIETIES_PREFERRED_BUSINESS_TYPE', blank=True)),
                ('preferred_business_id', models.CharField(max_length=50, null=True, db_column='SOCIETIES_PREFERRED_BUSINESS_ID', blank=True)),
                ('business_type_not_allowed', models.CharField(max_length=50, null=True, db_column='BUSINESS_TYPE_NOT_ALLOWED', blank=True)),
                ('business_id_not_allowed', models.CharField(max_length=50, null=True, db_column='BUSINESS_ID_NOT_ALLOWED', blank=True)),
                ('referred_by', models.CharField(max_length=5, null=True, db_column='REFERRED_BY', blank=True)),
                ('contact_person_count', models.IntegerField(null=True, db_column='CONTACT_PERSON_COUNT', blank=True)),
                ('walking_area_available', models.CharField(max_length=45, null=True, db_column='WALKING_AREA_AVAILABLE', blank=True)),
                ('walking_area_size', models.CharField(max_length=10, null=True, db_column='WALKING_AREA_SIZE', blank=True)),
                ('count_0_5', models.IntegerField(null=True, db_column='COUNT_0-5', blank=True)),
                ('count_5_15', models.IntegerField(null=True, db_column='COUNT_5-15', blank=True)),
                ('count_15_25', models.IntegerField(null=True, db_column='COUNT_15-25', blank=True)),
                ('count_25_60', models.IntegerField(null=True, db_column='COUNT_25-60', blank=True)),
                ('count_60above', models.IntegerField(null=True, db_column='count_60above', blank=True)),
                ('flat_type_count', models.IntegerField(null=True, db_column='FLAT_TYPE_COUNT', blank=True)),
                ('flat_avg_size', models.IntegerField(null=True, db_column='FLAT_AVG_SIZE', blank=True)),
                ('flat_avg_rental_persqft', models.IntegerField(null=True, db_column='FLAT_AVG_RENTAL_PERSQFT', blank=True)),
                ('flat_sale_cost_persqft', models.IntegerField(null=True, db_column='FLAT_SALE_COST_PERSQFT', blank=True)),
                ('past_campaign_occurred', models.CharField(max_length=5, null=True, db_column='PAST_CAMPAIGN_OCCURRED')),
                ('past_collections_stalls', models.IntegerField(null=True, db_column='PAST_YEAR_COLLECTIONS_STALLS')),
                ('past_collections_car', models.IntegerField(null=True, db_column='PAST_YEAR_COLLECTIONS_CAR')),
                ('past_collections_poster', models.IntegerField(null=True, db_column='PAST_YEAR_COLLECTIONS_POSTER')),
                ('past_collections_banners', models.IntegerField(null=True, db_column='PAST_YEAR_COLLECTIONS_BANNERS')),
                ('past_collections_standee', models.IntegerField(null=True, db_column='PAST_YEAR_COLLECTIONS_STANDEE')),
                ('past_sponsorship_collection_events', models.IntegerField(null=True, db_column='PAST_YEAR_SPONSORSHIP_COLLECTION_EVENTS')),
                ('past_total_sponsorship', models.IntegerField(null=True, db_column='PAST_YEAR_TOTAL_SPONSORSHIP')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='CREATED_ON')),
                ('total_ad_spaces', models.IntegerField(null=True, db_column='TOTAL_AD_SPACES')),
                ('tower_count', models.IntegerField(null=True, db_column='TOWER_COUNT', blank=True)),
                ('standee_count', models.IntegerField(null=True, db_column='STANDEE_COUNT', blank=True)),
                ('stall_count', models.IntegerField(null=True, db_column='STALL_COUNT', blank=True)),
                ('banner_count', models.IntegerField(null=True, db_column='BANNER_COUNT', blank=True)),
                ('total_campaign', models.IntegerField(null=True, db_column='TOTAL_CAMPAIGN', blank=True)),
                ('payment_details_available', models.BooleanField(default=False, db_column='PAYMENT_DETAILS_AVAILABLE')),
                ('age_of_society', models.FloatField(null=True, db_column='AGE_OF_SOCIETY', blank=True)),
                ('name_for_payment', models.CharField(max_length=100, null=True, db_column='NAME_FOR_PAYMENT', blank=True)),
                ('ifsc_code', models.CharField(max_length=100, null=True, db_column='IFSC_CODE', blank=True)),
                ('bank_name', models.CharField(max_length=100, null=True, db_column='BANK_NAME', blank=True)),
                ('account_no', models.IntegerField(null=True, db_column='ACCOUNT_NUMBER', blank=True)),
                ('street_furniture_available', models.BooleanField(default=False, db_column='STREET_FURNITURE_AVAILABLE')),
                ('stall_timing', models.CharField(max_length=10, null=True, db_column='STALL_TIMING', blank=True)),
                ('electricity_available', models.BooleanField(default=False, db_column='ELECTRICITY_AVAILABLE')),
                ('sound_available', models.BooleanField(default=False, db_column='SOUND_AVAILABLE')),
                ('daily_electricity_charges', models.IntegerField(default=0, null=True, db_column='DAILY_ELECTRICITY_CHARGES', blank=True)),
                ('poster_allowed_nb', models.BooleanField(default=False, db_column='POSTER_ALLOWED_NB')),
                ('poster_allowed_lift', models.BooleanField(default=False, db_column='POSTER_ALLOWED_LIFT')),
                ('standee_allowed', models.BooleanField(default=False, db_column='STANDEE_ALLOWED')),
                ('flier_allowed', models.BooleanField(default=False, db_column='FLIER_ALLOWED')),
                ('stall_allowed', models.BooleanField(default=False, db_column='STALL_ALLOWED')),
                ('car_display_allowed', models.BooleanField(default=False, db_column='CAR_DISPLAY_ALLOWED')),
                ('banner_allowed', models.BooleanField(default=False, db_column='BANNER_ALLOWED')),
                ('created_by', models.ForeignKey(related_name='societies', db_column='CREATED_BY', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'db_table': 'supplier_society',
            },
        ),
        migrations.CreateModel(
            name='SwimmingPoolInfo',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('size_breadth', models.FloatField(default=0.0, null=True, db_column='SIZE_BREADTH', blank=True)),
                ('size_length', models.FloatField(default=0.0, null=True, db_column='SIZE_LENGTH', blank=True)),
                ('side_area', models.FloatField(default=0.0, null=True, db_column='SIDE_AREA', blank=True)),
                ('side_rentals', models.CharField(max_length=10, null=True, db_column='SIDE_RENTALS', blank=True)),
                ('timings_open', models.TimeField(null=True, db_column='TIMINGS_OPEN', blank=True)),
                ('timings_close', models.TimeField(null=True, db_column='TIMINGS_CLOSE', blank=True)),
                ('daily_price_society', models.FloatField(default=0.0, null=True, db_column='DAILY_PRICE_SOCIETY', blank=True)),
                ('daily_price_business', models.FloatField(default=0.0, null=True, db_column='DAILY_PRICE_BUSINESS', blank=True)),
                ('location', models.CharField(max_length=50, null=True, db_column='LOCATION', blank=True)),
                ('notice_board_count_per_swimming_pool', models.IntegerField(null=True, db_column='NOTICE_BOARD_COUNT_PER_SWIMMING_POOL', blank=True)),
                ('standee_location_count_per_swimming_pool', models.IntegerField(null=True, db_column='STANDEE_LOCATION_COUNT_PER_SWIMMING_POOL', blank=True)),
                ('stall_count_per_swimming_pool', models.IntegerField(null=True, db_column='STALL_COUNT_PER_SWIMMING_POOL', blank=True)),
                ('banner_count_per_swimming_pool', models.IntegerField(null=True, db_column='BANNER_COUNT_PER_SWIMMING_POOL', blank=True)),
                ('sitting', models.IntegerField(null=True, db_column='SITTING', blank=True)),
                ('inventory_status', models.CharField(max_length=15, null=True, db_column='INVENTORY_STATUS', blank=True)),
                ('audio_video_display_available', models.CharField(max_length=5, null=True, db_column='AUDIO_VIDEO_DISPLAY_AVAILABLE', blank=True)),
                ('electricity_charges_perhour', models.IntegerField(null=True, db_column='ELECTRICITY_CHARGES_PERHOUR', blank=True)),
                ('changing_room_available', models.CharField(max_length=5, null=True, db_column='CHANGING_ROOM_AVAILABLE', blank=True)),
                ('lit_unlit', models.CharField(max_length=5, null=True, db_column='LIT_UNLIT', blank=True)),
                ('photograph_1', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_1', blank=True)),
                ('photograph_2', models.CharField(max_length=45, null=True, db_column='PHOTOGRAPH_2', blank=True)),
                ('supplier', models.ForeignKey(related_name='swimming_pools', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True)),
            ],
            options={
                'db_table': 'swimming_pool_info',
            },
        ),
        migrations.CreateModel(
            name='UserAreas',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('area', models.ForeignKey(to='v0.CityArea', db_column='area_id')),
                ('user', models.ForeignKey(related_name='clusters', db_column='user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_areas',
            },
        ),
        migrations.CreateModel(
            name='UserCities',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('city', models.ForeignKey(db_column='city_id', to='v0.City', null=True)),
                ('user', models.ForeignKey(related_name='cities', db_column='user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_cities',
            },
        ),
        migrations.CreateModel(
            name='UserInquiry',
            fields=[
                ('inquiry_id', models.AutoField(serialize=False, primary_key=True, db_column='INQUIRY_ID')),
                ('company_name', models.CharField(max_length=40, db_column='COMPANY_NAME')),
                ('contact_person_name', models.CharField(max_length=40, null=True, db_column='CONTACT_PERSON_NAME', blank=True)),
                ('email', models.CharField(max_length=40, null=True, db_column='EMAIL', blank=True)),
                ('phone', models.IntegerField(null=True, db_column='PHONE', blank=True)),
                ('inquiry_details', models.TextField(db_column='INQUIRY_DETAILS')),
            ],
            options={
                'db_table': 'user_inquiry',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('is_city_manager', models.BooleanField(default=False, db_column='is_city_manager')),
                ('is_cluster_manager', models.BooleanField(default=False, db_column='is_cluster_manager')),
                ('is_normal_user', models.BooleanField(default=False, db_column='is_normal_user')),
                ('society_form_access', models.BooleanField(default=False, db_column='society_form_access')),
                ('corporate_form_access', models.BooleanField(default=False, db_column='corporate_form_access')),
                ('created_by', models.ForeignKey(db_column='created_by', to=settings.AUTH_USER_MODEL, null=True)),
                ('user', models.ForeignKey(related_name='user_profile', db_column='user_id', to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='WallInventory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('inventory_type_id', models.CharField(max_length=20, db_column='INVENTORY_TYPE_ID', blank=True)),
                ('adinventory_id', models.CharField(max_length=22, db_column='ADINVENTORY_ID')),
                ('wall_size', models.CharField(max_length=10, null=True, db_column='WALL_SIZE', blank=True)),
                ('wall_frame_size', models.CharField(max_length=10, null=True, db_column='WALL_FRAME_SIZE', blank=True)),
                ('wall_area', models.CharField(max_length=10, null=True, db_column='WALL_AREA', blank=True)),
                ('wall_type', models.CharField(max_length=20, null=True, db_column='WALL_TYPE', blank=True)),
                ('wall_internal_external', models.CharField(max_length=10, null=True, db_column='WALL_INTERNAL_EXTERNAL', blank=True)),
                ('wall_sides', models.CharField(max_length=10, null=True, db_column='WALL_SIDES', blank=True)),
                ('wall_monthly_price_society', models.FloatField(default=0.0, null=True, db_column='WALL_MONTHLY_PRICE_SOCIETY', blank=True)),
                ('wall_quarterly_price_society', models.FloatField(default=0.0, null=True, db_column='WALL_QUARTERLY_PRICE_SOCIETY', blank=True)),
                ('wall_monthly_price_business', models.FloatField(default=0.0, null=True, db_column='WALL_MONTHLY_PRICE_BUSINESS', blank=True)),
                ('wall_quarterly_price_business', models.FloatField(default=0.0, null=True, db_column='WALL_QUARTERLY_PRICE_BUSINESS', blank=True)),
                ('wall_location', models.CharField(max_length=50, null=True, db_column='WALL_LOCATION', blank=True)),
                ('wall_paint_allowed', models.CharField(max_length=5, null=True, db_column='WALL_PAINT_ALLOWED', blank=True)),
                ('wall_frame_status', models.CharField(max_length=5, null=True, db_column='WALL_FRAME_STATUS', blank=True)),
                ('wall_inventory_status', models.CharField(max_length=15, null=True, db_column='WALL_INVENTORY_STATUS', blank=True)),
                ('supplier', models.ForeignKey(related_name='walls', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True)),
            ],
            options={
                'db_table': 'wall_inventory',
            },
        ),
        migrations.AddField(
            model_name='streetfurniture',
            name='supplier',
            field=models.ForeignKey(related_name='street_furniture', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='stallinventory',
            name='supplier',
            field=models.ForeignKey(related_name='stalls', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='sportsinfra',
            name='supplier',
            field=models.ForeignKey(related_name='sports', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='societytower',
            name='supplier',
            field=models.ForeignKey(related_name='towers', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='societymajorevents',
            name='supplier',
            field=models.ForeignKey(related_name='society_events', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='societyleads',
            name='society',
            field=models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='societyinventorybooking',
            name='society',
            field=models.ForeignKey(related_name='inventory_bookings', db_column='SUPPLIER_ID', to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='societyflat',
            name='tower',
            field=models.ForeignKey(related_name='flats', db_column='TOWER_ID', blank=True, to='v0.SocietyTower', null=True),
        ),
        migrations.AddField(
            model_name='shortlistedspacesversion',
            name='space_mapping_version',
            field=models.ForeignKey(related_name='spaces_version', to='v0.SpaceMappingVersion'),
        ),
        migrations.AddField(
            model_name='shortlistedspaces',
            name='space_mapping',
            field=models.ForeignKey(related_name='spaces', to='v0.SpaceMapping'),
        ),
        migrations.AlterUniqueTogether(
            name='ratiodetails',
            unique_together=set([('supplier_id', 'machadalo_index')]),
        ),
        migrations.AddField(
            model_name='proposalcentermappingversion',
            name='proposal_version',
            field=models.ForeignKey(related_name='centers_version', to='v0.ProposalInfoVersion'),
        ),
        migrations.AddField(
            model_name='proposalcentermapping',
            name='proposal',
            field=models.ForeignKey(related_name='centers', to='v0.ProposalInfo'),
        ),
        migrations.AddField(
            model_name='pricemappingdefault',
            name='supplier',
            field=models.ForeignKey(related_name='default_prices', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='pricemapping',
            name='supplier',
            field=models.ForeignKey(related_name='inv_prices', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='posterinventory',
            name='supplier',
            field=models.ForeignKey(db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='poleinventory',
            name='supplier',
            field=models.ForeignKey(related_name='poles', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='noticeboarddetails',
            name='tower',
            field=models.ForeignKey(related_name='notice_boards', db_column='TOWER_ID', blank=True, to='v0.SocietyTower', null=True),
        ),
        migrations.AddField(
            model_name='mailboxinfo',
            name='supplier',
            field=models.ForeignKey(related_name='mail_boxes', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='liftdetails',
            name='tower',
            field=models.ForeignKey(related_name='lifts', db_column='TOWER_ID', blank=True, to='v0.SocietyTower', null=True),
        ),
        migrations.AddField(
            model_name='inventorytypeversion',
            name='space_mapping_version',
            field=models.ForeignKey(related_name='inventory_types_version', to='v0.SpaceMappingVersion'),
        ),
        migrations.AddField(
            model_name='inventorytype',
            name='space_mapping',
            field=models.ForeignKey(related_name='inventory_types', to='v0.SpaceMapping'),
        ),
        migrations.AddField(
            model_name='inventorysummary',
            name='supplier',
            field=models.ForeignKey(related_name='inventoy_summary', null=True, db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', unique=True),
        ),
        migrations.AddField(
            model_name='imagemapping',
            name='supplier',
            field=models.ForeignKey(related_name='images', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='flierthroughlobbyinfo',
            name='supplier',
            field=models.ForeignKey(related_name='flier_lobby', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='flattype',
            name='society',
            field=models.ForeignKey(related_name='flatTypes', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='events',
            name='supplier',
            field=models.ForeignKey(related_name='events', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='doortodoorinfo',
            name='supplier',
            field=models.ForeignKey(related_name='door_to_doors', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='corporateparkcompanylist',
            name='supplier_id',
            field=models.ForeignKey(related_name='corporatecompany', db_column='CORPORATEPARK_ID', blank=True, to='v0.SupplierTypeCorporate', null=True),
        ),
        migrations.AddField(
            model_name='corporatecompanydetails',
            name='company_id',
            field=models.ForeignKey(related_name='companydetails', db_column='COMPANY_ID', blank=True, to='v0.CorporateParkCompanyList', null=True),
        ),
        migrations.AddField(
            model_name='corporatebuilding',
            name='corporatepark_id',
            field=models.ForeignKey(related_name='corporatebuilding', db_column='CORPORATE_ID', blank=True, to='v0.SupplierTypeCorporate', null=True),
        ),
        migrations.AddField(
            model_name='contactdetails',
            name='supplier',
            field=models.ForeignKey(related_name='contacts', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='companyfloor',
            name='company_details_id',
            field=models.ForeignKey(related_name='wingfloor', db_column='COMPANY_DETAILS_ID', blank=True, to='v0.CorporateCompanyDetails', null=True),
        ),
        migrations.AddField(
            model_name='communityhallinfo',
            name='supplier',
            field=models.ForeignKey(related_name='community_halls', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='commonareadetails',
            name='supplier',
            field=models.ForeignKey(related_name='ca', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='city',
            name='state_code',
            field=models.ForeignKey(related_name='statecode', db_column='STATE_CODE', to='v0.State', null=True),
        ),
        migrations.AddField(
            model_name='campaignsocietymapping',
            name='society',
            field=models.ForeignKey(related_name='campaigns', db_column='SUPPLIER_ID', to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='campaigninventoryprice',
            name='supplier',
            field=models.ForeignKey(related_name='inventoryprice', null=True, db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', unique=True),
        ),
        migrations.AddField(
            model_name='businesssubtypes',
            name='business_type',
            field=models.ForeignKey(related_name='business_subtypes', db_column='BUSINESS_TYPE', to='v0.BusinessTypes', null=True),
        ),
        migrations.AddField(
            model_name='businessinfo',
            name='sub_type',
            field=models.ForeignKey(related_name='sub_type_set', db_column='SUB_TYPE', to='v0.BusinessSubTypes'),
        ),
        migrations.AddField(
            model_name='businessinfo',
            name='type_name',
            field=models.ForeignKey(related_name='type_set', db_column='TYPE', to='v0.BusinessTypes'),
        ),
        migrations.AddField(
            model_name='bannerinventory',
            name='supplier',
            field=models.ForeignKey(related_name='banners', db_column='SUPPLIER_ID', blank=True, to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='audits',
            name='society_booking',
            field=models.ForeignKey(related_name='audits', db_column='SOCIETY_BOOKING_ID', to='v0.SocietyInventoryBooking', null=True),
        ),
        migrations.AddField(
            model_name='auditorsocietymapping',
            name='society',
            field=models.ForeignKey(related_name='auditors', db_column='SUPPLIER_ID', to='v0.SupplierTypeSociety', null=True),
        ),
        migrations.AddField(
            model_name='adinventorylocationmapping',
            name='location',
            field=models.ForeignKey(related_name='inventory_locations', db_column='INVENTORY_LOCATION_ID', blank=True, to='v0.InventoryLocation', null=True),
        ),
        migrations.AddField(
            model_name='accountinfo',
            name='business',
            field=models.ForeignKey(related_name='accounts', db_column='BUSINESS_ID', to='v0.BusinessInfo', null=True),
        ),
        migrations.AlterUniqueTogether(
            name='societytower',
            unique_together=set([('tower_tag', 'supplier')]),
        ),
        migrations.AlterUniqueTogether(
            name='societyflat',
            unique_together=set([('tower', 'flat_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='proposalcentermappingversion',
            unique_together=set([('proposal_version', 'center_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='proposalcentermapping',
            unique_together=set([('proposal', 'center_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='citysubarea',
            unique_together=set([('area_code', 'subarea_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='cityarea',
            unique_together=set([('area_code', 'city_code')]),
        ),
    ]
