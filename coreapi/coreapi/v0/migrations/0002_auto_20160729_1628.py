# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('v0', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyFloor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('floor_number', models.IntegerField(null=True, db_column='FLOOR_NUMBER', blank=True)),
            ],
            options={
                'db_table': 'corporate_building_floors',
            },
        ),
        migrations.CreateModel(
            name='CorporateBuilding',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('building_name', models.CharField(max_length=50, null=True, db_column='BUILDING_NAME', blank=True)),
                ('number_of_wings', models.IntegerField(null=True, db_column='NUMBER_OF_WINGS', blank=True)),
            ],
            options={
                'db_table': 'corporate_building',
            },
        ),
        migrations.CreateModel(
            name='CorporateBuildingWing',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('wing_name', models.CharField(max_length=50, null=True, db_column='WING_NAME', blank=True)),
                ('number_of_floors', models.IntegerField(null=True, db_column='NUMBER_OF_FLOORS', blank=True)),
                ('building_id', models.ForeignKey(related_name='buildingwing', db_column='BUILDING_ID', blank=True, to='v0.CorporateBuilding', null=True)),
            ],
            options={
                'db_table': 'corporate_building_wing',
            },
        ),
        migrations.CreateModel(
            name='CorporateCompanyDetails',
            fields=[
                ('id', models.AutoField(serialize=False, primary_key=True, db_column='ID')),
                ('building_name', models.CharField(max_length=20, null=True, db_column='BUILDING_NAME', blank=True)),
                ('wing_name', models.CharField(max_length=20, null=True, db_column='WING_NAME', blank=True)),
            ],
            options={
                'db_table': 'corporate_company_details',
            },
        ),
        migrations.CreateModel(
            name='InventoryTypeVersion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('supplier_code', models.CharField(max_length=4, db_index=True)),
                ('poster_allowed', models.BooleanField(default=False)),
                ('poster_type', models.CharField(max_length=10, null=True, blank=True)),
                ('standee_allowed', models.BooleanField(default=False)),
                ('standee_type', models.CharField(max_length=10, null=True, blank=True)),
                ('flier_allowed', models.BooleanField(default=False)),
                ('flier_type', models.CharField(max_length=20, null=True, blank=True)),
                ('stall_allowed', models.BooleanField(default=False)),
                ('stall_type', models.CharField(max_length=10, null=True, blank=True)),
                ('banner_allowed', models.BooleanField(default=False)),
                ('banner_type', models.CharField(max_length=10, null=True, blank=True)),
            ],
            options={
                'db_table': 'inventory_type_version',
            },
        ),
        migrations.CreateModel(
            name='ProposalCenterMappingVersion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('center_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=150, null=True, blank=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('radius', models.FloatField()),
                ('subarea', models.CharField(max_length=35)),
                ('area', models.CharField(max_length=35)),
                ('city', models.CharField(max_length=35)),
                ('pincode', models.IntegerField()),
            ],
            options={
                'db_table': 'proposal_center_mapping_version',
            },
        ),
        migrations.CreateModel(
            name='ProposalInfoVersion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50, db_column='NAME', blank=True)),
                ('payment_status', models.BooleanField(default=False, db_column='PAYMENT STATUS')),
                ('created_on', models.DateTimeField()),
                ('created_by', models.CharField(default='Admin', max_length=50)),
                ('tentative_cost', models.IntegerField(default=5000)),
                ('tentative_start_date', models.DateTimeField(null=True)),
                ('tentative_end_date', models.DateTimeField(null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('proposal', models.ForeignKey(related_name='proposal_versions', db_column='PROPOSAL', to='v0.ProposalInfo')),
            ],
            options={
                'db_table': 'proposal_info_version',
            },
        ),
        migrations.CreateModel(
            name='ShortlistedSpacesVersion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('supplier_code', models.CharField(max_length=4)),
                ('object_id', models.CharField(max_length=12)),
                ('buffer_status', models.BooleanField(default=False)),
                ('content_type', models.ForeignKey(related_name='spaces_version', to='contenttypes.ContentType')),
            ],
            options={
                'db_table': 'shortlisted_spaces_version',
            },
        ),
        migrations.CreateModel(
            name='SpaceMappingVersion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('society_allowed', models.BooleanField(default=False)),
                ('society_count', models.IntegerField(default=0)),
                ('society_buffer_count', models.IntegerField(default=0)),
                ('corporate_allowed', models.BooleanField(default=False)),
                ('corporate_count', models.IntegerField(default=0)),
                ('corporate_buffer_count', models.IntegerField(default=0)),
                ('gym_allowed', models.BooleanField(default=False)),
                ('gym_count', models.IntegerField(default=0)),
                ('gym_buffer_count', models.IntegerField(default=0)),
                ('salon_allowed', models.BooleanField(default=False)),
                ('salon_count', models.IntegerField(default=0)),
                ('salon_buffer_count', models.IntegerField(default=0)),
                ('center_version', models.OneToOneField(related_name='space_mappings_version', to='v0.ProposalCenterMappingVersion')),
                ('proposal_version', models.ForeignKey(related_name='space_mapping_version', to='v0.ProposalInfoVersion')),
            ],
            options={
                'db_table': 'space_mapping_version',
            },
        ),
        migrations.CreateModel(
            name='SupplierTypeGym',
            fields=[
                ('supplier_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='SUPPLIER_ID')),
                ('supplier_code', models.CharField(max_length=3, null=True, db_column='SUPPLIER_CODE')),
                ('name', models.CharField(max_length=70, null=True, db_column='NAME', blank=True)),
                ('address1', models.CharField(max_length=250, null=True, db_column='ADDRESS1', blank=True)),
                ('address2', models.CharField(max_length=250, null=True, db_column='ADDRESS2', blank=True)),
                ('zipcode', models.IntegerField(null=True, db_column='ZIP', blank=True)),
                ('city', models.CharField(max_length=250, null=True, db_column='CITY', blank=True)),
                ('state', models.CharField(max_length=250, null=True, db_column='STATE', blank=True)),
                ('latitude', models.FloatField(default=0.0, null=True, db_column='LATITUDE', blank=True)),
                ('longitude', models.FloatField(default=0.0, null=True, db_column='LONGITUDE', blank=True)),
                ('locality', models.CharField(max_length=30, null=True, db_column='LOCALITY', blank=True)),
                ('subarea', models.CharField(max_length=30, null=True, db_column='SUB_AREA', blank=True)),
                ('gym_type', models.CharField(max_length=30, null=True, db_column='GYM_TYPE', blank=True)),
                ('category', models.CharField(max_length=30, null=True, db_column='CATEGORY', blank=True)),
                ('locality_rating', models.CharField(max_length=30, null=True, db_column='LOCALITY_RATING', blank=True)),
                ('gym_type_chain', models.CharField(max_length=30, null=True, db_column='GYM_TYPE_CHAIN', blank=True)),
                ('machadalo_index', models.CharField(max_length=30, null=True, db_column='MACHADALO_INDEX', blank=True)),
                ('chain_origin', models.CharField(max_length=30, null=True, db_column='GYM_ORIGIN', blank=True)),
                ('totalmembership_perannum', models.IntegerField(null=True, db_column='TOTALMEMBERSHIP_PERANNUM', blank=True)),
                ('footfall_day', models.IntegerField(null=True, db_column='FOOTFALL_DAY', blank=True)),
                ('footfall_weekend', models.IntegerField(null=True, db_column='FOOTFALL_WEEKEND', blank=True)),
                ('advertising_media', models.CharField(max_length=30, null=True, db_column='AD_MEDIA', blank=True)),
                ('dietchart_price', models.IntegerField(null=True, db_column='DIETCHART_PRICE', blank=True)),
                ('stall_price_day', models.IntegerField(null=True, db_column='STALL_PRICE_DAY', blank=True)),
                ('stall_price_two_day', models.IntegerField(null=True, db_column='', blank=True)),
                ('standee_price_week', models.IntegerField(null=True, db_column='STANDEE_PRICE_WEEK', blank=True)),
                ('standee_price_two_week', models.IntegerField(null=True, db_column='STANDEE_PRICE_TWO_WEEK', blank=True)),
                ('standee_price_month', models.IntegerField(null=True, db_column='STANDEE_PRICE_MONTH', blank=True)),
                ('standee_places', models.IntegerField(null=True, db_column='STANDEE_PLACES', blank=True)),
                ('standee_location', models.CharField(max_length=30, null=True, db_column='STANDEE_LOCATION', blank=True)),
                ('banner_price_week', models.IntegerField(null=True, db_column='BANNER_PRICE_WEEK', blank=True)),
                ('banner_price_month', models.IntegerField(null=True, db_column='BANNER_PRICE_MONTH', blank=True)),
                ('banner_places', models.IntegerField(null=True, db_column='BANNER_PLACES', blank=True)),
                ('banner_location', models.CharField(max_length=30, null=True, db_column='BANNER_LOCATION', blank=True)),
                ('flyer_price_month', models.IntegerField(null=True, db_column='FLYER_PRICE_MONTH', blank=True)),
                ('flyer_distribution', models.CharField(max_length=30, null=True, db_column='FLYER_DISTRIBUTION', blank=True)),
                ('poster_price_week', models.IntegerField(null=True, db_column='POSTER_PRICE_WEEK', blank=True)),
                ('poster_price_month', models.IntegerField(null=True, db_column='POSTER_PRICE_MONTH', blank=True)),
                ('poster_places', models.IntegerField(null=True, db_column='POSTER_PLACES', blank=True)),
                ('mirrorstrip_count', models.IntegerField(null=True, db_column='MIRRORSTRIP_COUNT', blank=True)),
                ('mirrorstrip_price_week', models.IntegerField(null=True, db_column='MIRRORSTRIP_PRICE_WEEK', blank=True)),
                ('mirrorstrip_price_month', models.IntegerField(null=True, db_column='MIRRORSTRIP_PRICE_MONTH', blank=True)),
                ('locker_count', models.IntegerField(null=True, db_column='LOCKER_COUNT', blank=True)),
                ('locker_price_week', models.IntegerField(null=True, db_column='LOCKER_PRICE_WEEK', blank=True)),
                ('locker_price_month', models.IntegerField(null=True, db_column='LOCKER_PRICE_MONTH', blank=True)),
                ('wall_price_month', models.IntegerField(null=True, db_column='WALL_PRICE_MONTH', blank=True)),
                ('wall_price_three_month', models.IntegerField(null=True, db_column='WALL_PRICE_THREE_MONTH', blank=True)),
                ('gym_name', models.CharField(max_length=30, null=True, db_column='GYM_NAME', blank=True)),
                ('bank_name', models.CharField(max_length=30, null=True, db_column='BANK_NAME', blank=True)),
                ('ifsc_code', models.CharField(max_length=30, null=True, db_column='IFSC_CODE', blank=True)),
                ('account_number', models.CharField(max_length=30, null=True, db_column='ACCOUNT_NUMBER', blank=True)),
            ],
            options={
                'db_table': 'supplier_gym',
            },
        ),
        migrations.CreateModel(
            name='SupplierTypeSalon',
            fields=[
                ('supplier_id', models.CharField(max_length=20, serialize=False, primary_key=True, db_column='SUPPLIER_ID')),
                ('supplier_code', models.CharField(max_length=3, null=True, db_column='SUPPLIER_CODE')),
                ('name', models.CharField(max_length=70, null=True, db_column='NAME', blank=True)),
                ('address1', models.CharField(max_length=250, null=True, db_column='ADDRESS1', blank=True)),
                ('address2', models.CharField(max_length=250, null=True, db_column='ADDRESS2', blank=True)),
                ('zipcode', models.IntegerField(null=True, db_column='ZIP', blank=True)),
                ('city', models.CharField(max_length=250, null=True, db_column='CITY', blank=True)),
                ('state', models.CharField(max_length=250, null=True, db_column='STATE', blank=True)),
                ('latitude', models.FloatField(default=0.0, null=True, db_column='LATITUDE', blank=True)),
                ('longitude', models.FloatField(default=0.0, null=True, db_column='LONGITUDE', blank=True)),
                ('locality', models.CharField(max_length=30, null=True, db_column='LOCALITY', blank=True)),
                ('subarea', models.CharField(max_length=30, null=True, db_column='SUB_AREA', blank=True)),
                ('salon_type', models.CharField(max_length=30, null=True, db_column='SALON_TYPE', blank=True)),
                ('category', models.CharField(max_length=30, null=True, db_column='CATEGORY', blank=True)),
                ('locality_rating', models.CharField(max_length=30, null=True, db_column='LOCALITY_RATING', blank=True)),
                ('salon_type_chain', models.CharField(max_length=30, null=True, db_column='SALON_TYPE_CHAIN', blank=True)),
                ('machadalo_index', models.CharField(max_length=30, null=True, db_column='MACHADALO_INDEX', blank=True)),
                ('footfall_day', models.IntegerField(null=True, db_column='FOOTFALL_DAY', blank=True)),
                ('footfall_week', models.IntegerField(null=True, db_column='FOOTFALL_WEEK', blank=True)),
                ('footfall_weekend', models.IntegerField(null=True, db_column='FOOTFALL_WEEKEND', blank=True)),
                ('isspaavailable', models.BooleanField(default=False, db_column='ISSPAAVAILABLE')),
                ('advertising_media', models.CharField(max_length=30, null=True, db_column='AD_MEDIA', blank=True)),
                ('shop_size', models.CharField(max_length=30, null=True, db_column='SHOP_SIZE', blank=True)),
                ('floor_size', models.CharField(max_length=30, null=True, db_column='FLOOR_SIZE', blank=True)),
                ('standee_price_week', models.IntegerField(null=True, db_column='ST_PRICE_WEEK', blank=True)),
                ('standee_price_weekend', models.IntegerField(null=True, db_column='ST_PRICE_WEEKEND', blank=True)),
                ('standee_places', models.IntegerField(null=True, db_column='ST_PLACES', blank=True)),
                ('standee_location', models.IntegerField(null=True, db_column='ST_LOCATION', blank=True)),
                ('banner_price_week', models.IntegerField(null=True, db_column='BA_PRICE_WEEK', blank=True)),
                ('banner_price_weekend', models.IntegerField(null=True, db_column='BA_PRICE_WEEKEND', blank=True)),
                ('banner_places', models.IntegerField(null=True, db_column='BA_PLACES', blank=True)),
                ('banner_location', models.IntegerField(null=True, db_column='BA_LOCATION', blank=True)),
                ('flyer_price_week', models.IntegerField(null=True, db_column='FL_PRICE_WEEK', blank=True)),
                ('flyer_distribution', models.IntegerField(null=True, db_column='FL_DISTRIBUTION', blank=True)),
                ('poster_price_week', models.IntegerField(null=True, db_column='PO_PRICE_WEEK', blank=True)),
                ('poster_price_weekend', models.IntegerField(null=True, db_column='PO_PRICE_WEEKEND', blank=True)),
                ('poster_places', models.IntegerField(null=True, db_column='PO_PLACES', blank=True)),
                ('mirrorstrip_price_week', models.IntegerField(null=True, db_column='MS_PRICE_WEEK', blank=True)),
                ('mirrorstrip_price_month', models.IntegerField(null=True, db_column='MS_PRICE_MONTH', blank=True)),
                ('salon_name', models.CharField(max_length=30, null=True, db_column='SALON_NAME', blank=True)),
                ('bank_name', models.CharField(max_length=30, null=True, db_column='BANK_NAME', blank=True)),
                ('ifsc_code', models.CharField(max_length=30, null=True, db_column='IFSC_CODE', blank=True)),
                ('account_number', models.CharField(max_length=30, null=True, db_column='ACCOUNT_NUMBER', blank=True)),
            ],
            options={
                'db_table': 'supplier_salon',
            },
        ),
        migrations.RenameField(
            model_name='spacemapping',
            old_name='saloon_allowed',
            new_name='salon_allowed',
        ),
        migrations.RenameField(
            model_name='spacemapping',
            old_name='saloon_buffer_count',
            new_name='salon_buffer_count',
        ),
        migrations.RenameField(
            model_name='spacemapping',
            old_name='saloon_count',
            new_name='salon_count',
        ),
        migrations.RenameField(
            model_name='suppliertypecorporate',
            old_name='zip',
            new_name='zipcode',
        ),
        migrations.RemoveField(
            model_name='corporateparkcompanylist',
            name='largest_employers',
        ),
        migrations.RemoveField(
            model_name='suppliertypecorporate',
            name='age',
        ),
        migrations.RemoveField(
            model_name='suppliertypecorporate',
            name='location_type',
        ),
        migrations.RemoveField(
            model_name='suppliertypecorporate',
            name='type',
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='account_number',
            field=models.CharField(max_length=30, null=True, db_column='ACCOUNT_NUMBER', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='averagerent',
            field=models.FloatField(default=0.0, null=True, db_column='AVERAGERENT', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='bank_name',
            field=models.CharField(max_length=30, null=True, db_column='BANK_NAME', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='constructedspace',
            field=models.FloatField(default=0.0, null=True, db_column='CONSTRUCTEDSPACE', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='constructionspaces_count',
            field=models.IntegerField(null=True, db_column='CONSTRUCTIONSPACES_COUNT', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='corporate_name',
            field=models.CharField(max_length=30, null=True, db_column='CORPORATE_NAME_PAYMENT', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='corporate_type',
            field=models.CharField(max_length=25, null=True, db_column='CORPORATE_TYPE', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='entryexit_count',
            field=models.IntegerField(null=True, db_column='ENTRYEXIT_COUNT', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='ifsc_code',
            field=models.CharField(max_length=30, null=True, db_column='IFSC_CODE', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='locality_rating',
            field=models.CharField(max_length=50, null=True, db_column='CORPORATE_LOCALITY_RATING', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='luxurycars_count',
            field=models.IntegerField(null=True, db_column='LUXURYCARS_COUNT', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='machadalo_index',
            field=models.CharField(max_length=30, null=True, db_column='MACHADALO_INDEX', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='openspace',
            field=models.FloatField(default=0.0, null=True, db_column='OPENSPACE', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='openspaces_count',
            field=models.IntegerField(null=True, db_column='OPENSPACES_COUNT', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='parkingspace',
            field=models.FloatField(default=0.0, null=True, db_column='PARKINGSPACE', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='parkingspaces_count',
            field=models.IntegerField(null=True, db_column='PARKINGSPACES_COUNT', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='possession_year',
            field=models.CharField(max_length=5, null=True, db_column='CORPORATE_AGE', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='quality_rating',
            field=models.CharField(max_length=50, null=True, db_column='QUALITY_RATING', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='quantity_rating',
            field=models.CharField(max_length=50, null=True, db_column='QUANTITY_RATING', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='standardcars_count',
            field=models.IntegerField(null=True, db_column='STANDARDCARS_COUNT', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='subarea',
            field=models.CharField(max_length=30, null=True, db_column='CORPORATE_SUB_AREA', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='total_area',
            field=models.FloatField(default=0.0, null=True, db_column='TOTAL_AREA', blank=True),
        ),
        migrations.AddField(
            model_name='suppliertypecorporate',
            name='totallift_count',
            field=models.IntegerField(null=True, db_column='TOTALLIFT_COUNT', blank=True),
        ),
        migrations.AlterField(
            model_name='businessinfo',
            name='business_id',
            field=models.CharField(max_length=15, serialize=False, primary_key=True, db_column='BUSINESS_ID'),
        ),
        migrations.AlterField(
            model_name='businesssubtypes',
            name='business_sub_type_code',
            field=models.CharField(max_length=3, null=True, db_column='SUBTYPE_CODE', blank=True),
        ),
        migrations.AlterField(
            model_name='businesstypes',
            name='business_type_code',
            field=models.CharField(max_length=4, unique=True, null=True, db_column='TYPE_CODE', blank=True),
        ),
        migrations.AlterField(
            model_name='corporateparkcompanylist',
            name='id',
            field=models.AutoField(serialize=False, primary_key=True, db_column='ID'),
        ),
        migrations.AlterField(
            model_name='corporateparkcompanylist',
            name='name',
            field=models.CharField(max_length='50', null=True, db_column='COMPANY_NAME', blank=True),
        ),
        migrations.AlterField(
            model_name='corporateparkcompanylist',
            name='supplier_id',
            field=models.ForeignKey(related_name='corporatecompany', db_column='CORPORATEPARK_ID', blank=True, to='v0.SupplierTypeCorporate', null=True),
        ),
        migrations.AlterField(
            model_name='suppliertypecorporate',
            name='latitude',
            field=models.FloatField(default=0.0, null=True, db_column='CORPORATE_LATITUDE', blank=True),
        ),
        migrations.AlterField(
            model_name='suppliertypecorporate',
            name='longitude',
            field=models.FloatField(default=0.0, null=True, db_column='CORPORATE_LONGITUDE', blank=True),
        ),
        migrations.AlterModelTable(
            name='inventorytype',
            table='INVENTORY_TYPE',
        ),
        migrations.AlterModelTable(
            name='proposalcentermapping',
            table='proposal_center_mapping',
        ),
        migrations.AlterModelTable(
            name='shortlistedspaces',
            table='shortlisted_spaces',
        ),
        migrations.AlterModelTable(
            name='spacemapping',
            table='space_mapping',
        ),
        migrations.AddField(
            model_name='shortlistedspacesversion',
            name='space_mapping_version',
            field=models.ForeignKey(related_name='spaces_version', to='v0.SpaceMappingVersion'),
        ),
        migrations.AddField(
            model_name='proposalcentermappingversion',
            name='proposal_version',
            field=models.ForeignKey(related_name='centers_version', to='v0.ProposalInfoVersion'),
        ),
        migrations.AddField(
            model_name='inventorytypeversion',
            name='space_mapping_version',
            field=models.ForeignKey(related_name='inventory_types_version', to='v0.SpaceMappingVersion'),
        ),
        migrations.AddField(
            model_name='corporatecompanydetails',
            name='company_id',
            field=models.ForeignKey(related_name='companydetails', db_column='COMPANY_ID', blank=True, to='v0.CorporateParkCompanyList', null=True),
        ),
        migrations.AddField(
            model_name='corporatebuilding',
            name='corporatepark_id',
            field=models.ForeignKey(related_name='corporatebuilding', db_column='CORPORATE_ID', blank=True, to='v0.SupplierTypeCorporate', null=True),
        ),
        migrations.AddField(
            model_name='companyfloor',
            name='company_details_id',
            field=models.ForeignKey(related_name='wingfloor', db_column='COMPANY_DETAILS_ID', blank=True, to='v0.CorporateCompanyDetails', null=True),
        ),
        migrations.AlterUniqueTogether(
            name='proposalcentermappingversion',
            unique_together=set([('proposal_version', 'center_name')]),
        ),
    ]
